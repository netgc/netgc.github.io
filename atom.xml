<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>System Inside</title>
  <icon>https://www.gravatar.com/avatar/ba4a4c9ed2a98e1ba0d030ca3449d4a5</icon>
  <subtitle>君不见黄河之水天上来，奔流到海不复回。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sysin.org/"/>
  <updated>2020-08-03T05:33:10.835Z</updated>
  <id>http://sysin.org/</id>
  
  <author>
    <name>sysin</name>
    <email>e-mail_address</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何安装 macOS Big Sur 11.0 Beta 虚机，解决 “BiErrorDomain Error 3.” 报错</title>
    <link href="http://sysin.org/article/Install_macOS_Big_Sur_11.0_Beta_VM_BiErrorDomain_Error_3/"/>
    <id>http://sysin.org/article/Install_macOS_Big_Sur_11.0_Beta_VM_BiErrorDomain_Error_3/</id>
    <published>2020-07-01T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:10.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取官方的-macos-beta-软件包">获取官方的 macOS Beta 软件包</h2><ul><li><p>官网直接下载，双击直接安装：<a href="http://swcdn.apple.com/content/downloads/15/52/001-18401-A_I5FFC1VB5J/rrfxkhkf3ykxzj3zjshu1srsh4n74a41n4/InstallAssistant.pkg" target="_blank" rel="noopener">点击</a></p></li><li><p>下载 <a href="https://betaprofiles.com/macos11" target="_blank" rel="noopener">Beta profile</a>，通过软件更新下载</p></li></ul><p>上述两种方式，都会将 Install macOS Beta.app 放置于 /Applications （应用程序）下面。</p><h2 id="安装方式">安装方式</h2><p>1.升级安装，下载后直接点击 “Install macOS Beta”</p><p>2.在当前系统中全新安装，打开“磁盘工具”，新建一个大约 16G 的 “macOS 扩展（日志式）”分区（非 APFS 卷），命名为Install，执行命令写入：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/Install\ macOS\ Beta.app/Contents/Resources/createinstallmedia --volume /Volumes/Install</span><br></pre></td></tr></table></figure></p><p>创建完毕后，打开“系统偏好设置...” &gt; “启动磁盘”，选择上述分区，重新启动，安装前抹掉原有系统卷即可全新安装。</p><p>3.创建启动 ISO，用于虚机全新安装：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdiutil create -size <span class="number">12</span>G -fs hfs+ -volname macOSInstaller -type SPARSEBUNDLE ~/Desktop/macOSInstaller</span><br><span class="line">hdiutil attach ~/Desktop/macOSInstaller.sparsebundle</span><br><span class="line">sudo /Applications/Install\ macOS\ Beta.app/Contents/Resources/createinstallmedia --volume /Volumes/macOSInstaller --nointeraction</span><br><span class="line">hdiutil detach /Volumes/Install\ macOS\ Beta -force</span><br><span class="line">hdiutil makehybrid -o ~/Desktop/macOSInstaller ~/Desktop/macOSInstaller.sparsebundle</span><br><span class="line">rm -rf ~/Desktop/macOSInstaller.sparsebundle</span><br></pre></td></tr></table></figure></p><p>此时将桌面上的 macOSInstaller.iso 文件挂载到虚机即可开始安装。</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>使用xz压缩文件</span><br><span class="line">cd ~/Desktop</span><br><span class="line">tar -Jcf macOSInstaller.iso.tar.xz macOSInstaller.iso</span><br></pre></td></tr></table></figure></p><h2 id="macos-big-sur-110-兼容设备">macOS Big Sur 11.0 兼容设备</h2><ul><li><strong>1. iMac 2014+</strong></li><li><strong>2. iMac Pro 2017</strong></li><li><strong>3. Mac Pro 2013+</strong></li><li><strong>4. MacMini 2014+</strong></li><li><strong>5. MacBook 2015+</strong></li><li><strong>6. MacBook Air 2013+</strong></li><li><strong>7. MacBook Pro 2013+</strong></li></ul><h2 id="解决-bierrordomain-error-3-报错">解决 “BiErrorDomain Error 3.” 报错</h2><p>在 VMware 中安装 macOS Big Sur，都会提示 “BiErrorDomain Error 3.”，无法继续，需要编辑 vmx 文件添加以下配置：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbios.reflectHost = <span class="string">"TRUE"</span></span><br><span class="line">hw.model = <span class="string">"MacBookPro16,1"</span></span><br><span class="line">board-id = <span class="string">"Mac-E1008331FDC96864"</span></span><br></pre></td></tr></table></figure></p><p>以上示例模拟的是 16-inch MacBook Pro，可以根据需要选择其他兼容的 Mac 设备。</p><p>获取 Mac Model ID，执行如下命令</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl hw.model</span><br></pre></td></tr></table></figure></p><p>获取 Mac Board ID，执行如下命令：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ioreg -l | grep board-id</span><br></pre></td></tr></table></figure></p><h2 id="适用的-vmware-软件和版本">适用的 VMware 软件和版本</h2><p>在以下软件和版本中测试通过</p><p>VMware ESXi 7.0.0</p><p>VMware Fusion 11.5.5</p><p>VMware Workstation 11.5.5 Windows x64</p><p>**提示：**不要安装自带的 VM-Tools，可能存在兼容性问题，下载 <a href="https://my.vmware.com/web/vmware/downloads/details?productId=742&amp;downloadGroup=VMTOOLS1110" target="_blank" rel="noopener">VMware Tools 11.1.0</a> 安装。</p><h2 id="使用-virtualbox-安装">使用 VirtualBox 安装</h2><p>使用 VirtualBox 安装 macOS Big Sur Beta，出现 “BiErrorDomain Error 3.” 报错，解决方法类似：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd “C:\Program Files\Oracle\VirtualBox\”</span><br><span class="line">VBoxManage.exe modifyvm “Your VM Name” –cpuidset <span class="number">00000001</span> <span class="number">000106e5</span> <span class="number">00100800</span> <span class="number">0098e3</span>fd bfebfbff</span><br><span class="line">VBoxManage setextradata “Your VM Name” “VBoxInternal/Devices/efi/<span class="number">0</span>/Config/DmiSystemProduct” “iMac19,<span class="number">1</span>”</span><br><span class="line">VBoxManage setextradata “Your VM Name” “VBoxInternal/Devices/efi/<span class="number">0</span>/Config/DmiSystemVersion” “<span class="number">1.0</span>”</span><br><span class="line">VBoxManage setextradata “Your VM Name” “VBoxInternal/Devices/efi/<span class="number">0</span>/Config/DmiBoardProduct” “Mac-AA95B1DDAB278B95”</span><br><span class="line">VBoxManage setextradata “Your VM Name” “VBoxInternal/Devices/smc/<span class="number">0</span>/Config/DeviceKey” “ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc”</span><br><span class="line">VBoxManage setextradata “Your VM Name” “VBoxInternal/Devices/smc/<span class="number">0</span>/Config/GetKeyFromRealSMC” <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h2 id="使用-parallels-desktop-安装">使用 Parallels Desktop 安装</h2><p>Set the following values set under <strong>Hardware &gt; Boot Order &gt; Advanced Settings &gt; Boot Flags.</strong></p><ul><li><code>devices.mac_hw_model=&quot;MacBookPro16,1&quot;</code></li><li><code>devices.smbios.board_id=&quot;Mac-E1008331FDC96864&quot;</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;获取官方的-macos-beta-软件包&quot;&gt;获取官方的 macOS Beta 软件包&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;官网直接下载，双击直接安装：&lt;a href=&quot;http://swcdn.apple.com/content/downloads/15/52/0
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 如何去除软件更新标记（数字1角标）</title>
    <link href="http://sysin.org/article/iPhone_iOS_%E5%A6%82%E4%BD%95%E5%8E%BB%E9%99%A4%E6%9B%B4%E6%96%B0%E6%A0%87%E8%AE%B0/"/>
    <id>http://sysin.org/article/iPhone_iOS_%E5%A6%82%E4%BD%95%E5%8E%BB%E9%99%A4%E6%9B%B4%E6%96%B0%E6%A0%87%E8%AE%B0/</id>
    <published>2020-06-11T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:17.809Z</updated>
    
    <content type="html"><![CDATA[<p>描述文件下载地址：https://betaprofiles.com/ 或者 https://www.ibeta.me/</p><p>手机上用safari浏览器打开上面两个网址中的任意一个，选择“<a href="https://betaprofiles.com/#block" target="_blank" rel="noopener">Block Update</a>”或者“屏蔽OTA更新”，根据提示安装即可。</p><h2 id="ios-13">iOS 13</h2><h3 id="描述文件可用">描述文件可用</h3><p>直接安装描述文件屏蔽更新，无需重启，检查更新即可去除。</p><p>也适用于watchOS 6+，当然也适用于iPadOS 13+</p><h3 id="描述文件不可用">描述文件不可用</h3><p>描述文件不适用的解决办法：WiFi+充电，系统自动下载更新，然后删除更新文件，重启系统，标记即可消失。</p><p>在路由器上屏蔽iOS更新网址：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 mesu.apple.com</span><br><span class="line">127.0.0.1 appldnld.apple.com</span><br><span class="line">127.0.0.1 swscan.apple.com</span><br><span class="line">127.0.0.1 xp.apple.com</span><br><span class="line">127.0.0.1 gdmf.apple.com</span><br><span class="line">127.0.0.1 updates-http.cdn-apple.com</span><br></pre></td></tr></table></figure></p><h2 id="ios-12">iOS 12</h2><h3 id="描述文件可用">描述文件可用</h3><p>安装描述文件屏蔽更新，需要重启。此时已经屏蔽更新，不过更新标记任然存在。</p><p>通过以下方法去除标记：</p><p>方法一：设置--通用--还原--还原所有设置（需要重新配置的东西比较多：网络、指纹面部识别等等，iCloud设置和屏幕布局等会保留）</p><p>方法二：退出iCloud登录，还原网络设置（可能需要），标记可以去除，重新登录iCloud（如果还原网络需要重新设置的只有WiFi等，比较少）</p><h3 id="描述文件不可用">描述文件不可用</h3><p>通过以下方法去除标记：</p><p>方法一：设置--通用--还原--还原所有设置（需要重新配置的东西比较多：屏幕布局、网络、指纹面部识别等等）</p><p>方法二：退出iCloud登录，还原网络设置（可能需要），标记可以去除，重新登录iCloud（如果还原网络需要重新设置的只有WiFi等，比较少）</p><p>在路由器上屏蔽iOS更新网址：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 mesu.apple.com</span><br><span class="line">127.0.0.1 appldnld.apple.com</span><br><span class="line">127.0.0.1 swscan.apple.com</span><br><span class="line">127.0.0.1 xp.apple.com</span><br><span class="line">127.0.0.1 gdmf.apple.com</span><br><span class="line">127.0.0.1 updates-http.cdn-apple.com</span><br></pre></td></tr></table></figure></p><blockquote><p>备注：描述文件不可用时，iOS 13的方法有小伙伴反馈也适用于iOS 12，未经验证。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;描述文件下载地址：https://betaprofiles.com/ 或者 https://www.ibeta.me/&lt;/p&gt;
&lt;p&gt;手机上用safari浏览器打开上面两个网址中的任意一个，选择“&lt;a href=&quot;https://betaprofiles.com/#bloc
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="iOS" scheme="http://sysin.org/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>macOS Catalina 10.15.5 正式版 下载 百度网盘 6月1日 补充更新</title>
    <link href="http://sysin.org/article/Download-macOS-Catalina-10.15.5-0601-update/"/>
    <id>http://sysin.org/article/Download-macOS-Catalina-10.15.5-0601-update/</id>
    <published>2020-06-02T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:24.672Z</updated>
    
    <content type="html"><![CDATA[<p><strong>macOS Catalina 10.15.5 = (19F101) 06/01/2020</strong></p><blockquote><p>下载链接: https://pan.baidu.com/s/15v1Mnx4T8oEB5KOOzMj80Q  密码: rlnk</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200603114922665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldGdj,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>基于MAS原版app制作，安全无添加，无任何logo。</p><p>看来是封堵了unc0ver jailbreak tool。</p><p><a href="https://support.apple.com/en-us/HT211215" target="_blank" rel="noopener">macOS Catalina 10.15.5 Supplemental Update, Security Update 2020-003 High Sierra</a></p><p>Released June 1, 2020</p><p>Kernel</p><p>Available for: macOS High Sierra 10.13.6, macOS Catalina 10.15.5</p><p>Impact: An application may be able to execute arbitrary code with kernel privileges</p><p>Description: A memory consumption issue was addressed with improved memory handling.</p><p>CVE-2020-9859: unc0ver</p><p>Published Date: June 01, 2020</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;macOS Catalina 10.15.5 = (19F101) 06/01/2020&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载链接: https://pan.baidu.com/s/15v1Mnx4T8oEB5KOOzMj80Q  
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>TLS Server Name Indication (TLS SNI) Support</title>
    <link href="http://sysin.org/article/TLS-SNI-Support/"/>
    <id>http://sysin.org/article/TLS-SNI-Support/</id>
    <published>2020-06-01T02:10:12.000Z</published>
    <updated>2020-08-03T05:33:54.349Z</updated>
    
    <content type="html"><![CDATA[<p>TLS Server Name Indication (TLS SNI)，used when a single virtual IP server needs to host multiple domains.</p><p>TLS SNI Support 即一个 IP 地址上支持多个域名的 SSL 站点，或者说一个 IP 上支持绑定多个 SSL 证书。</p><h2 id="支持-tls-sni-的浏览器">支持 TLS SNI 的浏览器</h2><p>Browsers/clients with support for TLS server name indication:</p><ul><li>Opera 8.0 and later (the TLS 1.1 protocol must be enabled)</li><li>Internet Explorer 7 or later (under Windows Vista and later only, not under Windows XP)</li><li>Firefox 2.0 or later</li><li>Curl 7.18.1 or later (when compiled against an SSL/TLS toolkit with SNI support)</li><li>Chrome 6.0 or later (on all platforms - releases up to 5.0 only on specific OS versions)</li><li>Safari 3.0 or later (under OS X 10.5.6 or later and under Windows Vista and later)</li></ul><p>To find out if your browser supports SNI, you can go to https://alice.sni.velox.ch/.</p><h2 id="f5-big-ip-tls-sni-support">F5 BIG-IP TLS SNI Support</h2><ul><li>版本支持</li></ul><p>主流支持版本（v11.6及以上）都可以支持，参看官方文档：<a href="https://techdocs.f5.com/kb/en-us/products/big-ip_ltm/manuals/product/bigip-ssl-administration-11-6-0/5.html" target="_blank" rel="noopener">v11.6</a>，<a href="https://techdocs.f5.com/kb/en-us/products/big-ip_ltm/manuals/product/bigip-system-ssl-administration-12-1-1/5.html" target="_blank" rel="noopener">v12.1</a>，<a href="https://techdocs.f5.com/kb/en-us/products/big-ip_ltm/manuals/product/bigip-ssl-administration-13-1-0/5.html" target="_blank" rel="noopener">v13.1</a></p><ul><li>配置要点</li></ul><p>参看：<a href="https://support.f5.com/csp/article/K13452" target="_blank" rel="noopener">K13452</a></p><p>分别创建多个域名的（Client or Server）SSL Profile</p><p>Server Name，分别填写域名（可选），如 www.a.com，支持通配符 *.a.com 也支持 * 代表任意域名，另外一个如 www.b.com</p><p>Default SSL Profile for SNI，其中一个域名需要勾选作为默认</p><p>Virtual Servers 的 SSL Profile（Client or Server）同时选择上述创建的多个 SSL Profile</p><p>注意：在 BIG-IP 13.x 及以前版本，多个 SSL Profile 的 Ciphers 和 Client Authentication 属性需要配置一致（14.x 及以后版本无此要求）</p><ul><li>iRules</li></ul><p>另外请注意，没有自动机制允许 BIG-IP 根据在客户端 SSL Hello 消息中接收到的 “Server Name” 值来选择 SSL Profile。</p><p>不过，在 iRule 的额外帮助下，您可以根据从客户机收到的初始 HTTP 请求中接收的“主机名”报头值强制选择正确的 serverssl profile。</p><p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">when HTTP_REQUEST &#123;</span><br><span class="line">    <span class="keyword">set</span> hostname [getfield [HTTP::host] <span class="string">":"</span> <span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">when SERVER_CONNECTED &#123;</span><br><span class="line">    <span class="keyword">switch</span> -<span class="keyword">glob</span> [<span class="keyword">string</span> tolower $hostname] &#123;</span><br><span class="line">    <span class="string">"siteA.com"</span> &#123;</span><br><span class="line">        SSL::profile serverssl-siteA</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">"siteB.com"</span> &#123;</span><br><span class="line">        SSL::profile serverssl-siteB</span><br><span class="line">    &#125;</span><br><span class="line">    default &#123;</span><br><span class="line"><span class="comment">    #default serversssl profile to be selected if Host header value cannot be matched with predefined values</span></span><br><span class="line">        SSL::profile serverssl</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="nginx-tls-sni-support">Nginx TLS SNI Support</h2><ul><li>版本支持</li></ul><p>参看<a href="https://nginx.org/en/docs/http/configuring_https_servers.html" target="_blank" rel="noopener">官方文档</a></p><p>OpenSSL supports SNI since 0.9.8f version if it was built with config option “--enable-tlsext”. Since OpenSSL 0.9.8j this option is enabled by default. If nginx was built with SNI support, then nginx will show this when run with the “-V” switch:</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -V</span><br><span class="line">...</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>Nginx 0.x 版本已经支持 TLS SNI</p><blockquote><ul><li>The SNI support status has been shown by the “-V” switch since 0.8.21 and 0.7.62.</li><li>The <code>ssl</code> parameter of the <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#listen" target="_blank" rel="noopener">listen</a> directive has been supported since 0.7.14. Prior to 0.8.21 it could only be specified along with the <code>default</code> parameter.</li><li>SNI has been supported since 0.5.23.</li><li>The shared SSL session cache has been supported since 0.5.6.</li><li>Version 1.9.1 and later: the default SSL protocols are TLSv1, TLSv1.1, and TLSv1.2 (if supported by the OpenSSL library).</li><li>Version 0.7.65, 0.8.19 and later: the default SSL protocols are SSLv3, TLSv1, TLSv1.1, and TLSv1.2 (if supported by the OpenSSL library).</li><li>Version 0.7.64, 0.8.18 and earlier: the default SSL protocols are SSLv2, SSLv3, and TLSv1.</li><li>Version 1.0.5 and later: the default SSL ciphers are “<code>HIGH:!aNULL:!MD5</code>”.</li><li>Version 0.7.65, 0.8.20 and later: the default SSL ciphers are “<code>HIGH:!ADH:!MD5</code>”.</li><li>Version 0.8.19: the default SSL ciphers are “<code>ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM</code>”.</li><li>Version 0.7.64, 0.8.18 and earlier: the default SSL ciphers are“<code>ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP</code>”.</li></ul></blockquote><ul><li>一般配置方法</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       443 ssl http2;</span><br><span class="line">        server_name  a.sysin.org;</span><br><span class="line">        ssl_certificate     a.sysin.org.crt;</span><br><span class="line">        ssl_certificate_key a.sysin.org.key;</span><br><span class="line">        ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">        ssl_ciphers 'AES128+EECDH:AES128+EDH';</span><br><span class="line">        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";</span><br><span class="line"></span><br><span class="line">        charset utf-8;</span><br><span class="line">        #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            index  index.php index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       443 ssl http2;</span><br><span class="line">        server_name  b.sysin.org;</span><br><span class="line">        ssl_certificate     b.sysin.org.crt;</span><br><span class="line">        ssl_certificate_key b.sysin.org.key;</span><br><span class="line">        ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">        ssl_ciphers 'AES128+EECDH:AES128+EDH';</span><br><span class="line">        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";</span><br><span class="line"></span><br><span class="line">        charset utf-8;</span><br><span class="line">        #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            index  index.php index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="iis-tsl-sni-support">IIS TSL SNI Support</h2><p>参看<a href="https://docs.microsoft.com/en-us/iis/get-started/whats-new-in-iis-8/iis-80-server-name-indication-sni-ssl-scalability" target="_blank" rel="noopener">官方文档</a></p><ul><li>版本支持</li></ul><p>要求 IIS 8.0 （Windows 2012）及以上版本</p><ul><li>配置要点</li></ul><p>创建多个 HTTPs 站点时，需要填写以下内容</p><p><strong>Hostname</strong>: （注意与 SSL 证书名称保持一致）</p><p><strong>Require Server Name Indication</strong>: 需要勾选</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TLS Server Name Indication (TLS SNI)，used when a single virtual IP server needs to host multiple domains.&lt;/p&gt;
&lt;p&gt;TLS SNI Support 即一个 IP 地
      
    
    </summary>
    
    
    
      <category term="HTTP" scheme="http://sysin.org/tags/HTTP/"/>
    
      <category term="F5" scheme="http://sysin.org/tags/F5/"/>
    
      <category term="Nginx" scheme="http://sysin.org/tags/Nginx/"/>
    
      <category term="TLS" scheme="http://sysin.org/tags/TLS/"/>
    
  </entry>
  
  <entry>
    <title>TLSv1.3 Support：主流 Web 客户端和服务端对 TLSv1.3 的支持情况</title>
    <link href="http://sysin.org/article/TLSv1.3-Support/"/>
    <id>http://sysin.org/article/TLSv1.3-Support/</id>
    <published>2020-06-01T02:10:12.000Z</published>
    <updated>2020-08-03T05:04:06.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言">1. 前言</h2><p>TLS 1.3 是时隔九年对 TLS 1.2 等之前版本的新升级，也是迄今为止改动最大的一次。针对目前已知的安全威胁，IETF（Internet Engineering Task Force，互联网工程任务组）制定 TLS 1.3 的新标准，使其有望成为有史以来最安全，但也最复杂的 TLS 协议。</p><p>TLS 1.3 与之前的协议有较大差异，主要在于：</p><ul><li>相比过去的的版本，引入了新的密钥协商机制 — PSK</li><li>支持 0-RTT 数据传输，在建立连接时节省了往返时间</li><li>废弃了 3DES、RC4、AES-CBC 等加密组件，废弃了 SHA1、MD5 等哈希算法</li><li>ServerHello 之后的所有握手消息采取了加密操作，可见明文大大减少</li><li>不再允许对加密报文进行压缩、不再允许双方发起重协商</li><li>DSA 证书不再允许在 TLS 1.3 中使用</li></ul><p>对比旧协议中的不足，TLS 1.3 确实可以称得上是向前迈了一大步。既避免之前版本出现的缺陷，也减少了 TLS 握手的时间。</p><p>总结一下，TLS 1.3 与以前的版本相比具有如下两个大的优势：更快的访问速度和更强的安全性！</p><h2 id="2-客户端支持">2. 客户端支持</h2><h3 id="浏览器">浏览器</h3><p><strong>Modern</strong>: Modern clients that support TLS 1.3, with no need for backwards compatibility</p><table><thead><tr><th>Configuration</th><th>Firefox</th><th>Android</th><th>Chrome</th><th>Edge</th><th>Internet Explorer</th><th>Java</th><th>OpenSSL</th><th>Opera</th><th>Safari</th></tr></thead><tbody><tr><td><strong>Modern</strong></td><td>63</td><td>10.0</td><td>70</td><td>75</td><td>--</td><td>11</td><td>1.1.1</td><td>57</td><td>12.1</td></tr></tbody></table><p>参看：https://wiki.mozilla.org/Security/Server_Side_TLS</p><h3 id="curl">curl</h3><p>7.52.0 - December 21 2016，curl: introduce the --tlsv1.3 option to force TLS 1.3</p><p>使用参数 <code>--tlsv1.3</code>，可以通过 <code>curl --help</code> 查看是否支持该参数</p><h2 id="3-f5-big-ip-tlsv1_3">3. F5 BIG-IP TLSv1_3</h2><p><a href="https://support.f5.com/csp/article/K10251520" target="_blank" rel="noopener">BIG-IP v14 开始支持 TLSv1_3</a>（In BIG-IP 14.0.0, the BIG-IP system adds limited support for Transport Layer Security (TLS) 1.3. Starting in BIG-IP 14.1.0.1 and later, this support was updated to provide production level support for TLS 1.3.）</p><p>By default, TLS 1.3 is disabled. To enable TLS 1.3, you must remove the <strong>No TLSv1.3</strong> option from the <strong>Enabled Options</strong> list in the Configuration utility for the Client SSL and Server SSL profiles</p><p>You can view a list of TLS 1.3 supported ciphers and groups using the following TMOS Shell (<strong>tmsh</strong>) commands:</p><ul><li><p>To view the supported client-side ciphers, use the following command:</p><p>tmsh run util clientssl-ciphers TLSv1_3</p></li><li><p>To view the supported server-side ciphers, use the following command:</p><p>tmsh run util serverssl-ciphers TLSv1_3</p></li></ul><p><strong>配置启用 TLSv1_3</strong></p><p>编辑 ClientSSL Profle：</p><p>Ciphers：选择 Cipher Group，下拉选择 f5-secure</p><p>Options：Options List...</p><p>Enabled Options，</p><p>Disable No TLSv1.3</p><p>添加，No TLSv1 和 TLSv1.1，保留默认的“Don't insert empty fragments”</p><h2 id="4-iis-amp-windows-tlsv13">4. IIS &amp; Windows TLSv1.3</h2><p>IIS 10 &amp; Windows Server 2019 正式版尚未支持，<a href="https://forums.iis.net/t/1250687.aspx?IIS+10+TLS+1+3+support" target="_blank" rel="noopener">参看</a></p><p>最新的 Windows Insider Preview 已经支持 TLS 1.3</p><p>the latest <a href="https://insider.windows.com/en-us/" target="_blank" rel="noopener">Windows Insider Preview Builds</a> for Schannel's TLS 1.3 support.</p><h2 id="5-nginx-tlsv13">5. Nginx TLSv1.3</h2><blockquote><p>The <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.</p></blockquote><blockquote><p>The <code>TLSv1.3</code> parameter (1.13.0) works only when OpenSSL 1.1.1 built with TLSv1.3 support is used.</p></blockquote><p><a href="http://wiki.nginx.org/HttpSslModule#ssl_protocols" target="_blank" rel="noopener">More info on the NGINX documentation</a></p><p>参考配置：启用 HTTP/2、TLSv1.3、推荐的Ciphers、HSTS</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl http2; # HTTP/2 Enable</span><br><span class="line">    server_name  www.sysin.org;</span><br><span class="line">    ssl_certificate     www.sysin.org.crt;</span><br><span class="line">    ssl_certificate_key www.sysin.org.key;</span><br><span class="line">    ssl_protocols       TLSv1.2 TLSv1.3; # Requires nginx &gt;= 1.13.0 else use TLSv1.2</span><br><span class="line">    ssl_ciphers  ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;</span><br><span class="line">    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-apache-httpd-tlsv13">6. Apache httpd TLSv1.3</h2><p><strong>版本要求：</strong></p><p>Apache version <code>2.4.36</code> or greater. (网上文章传言 2.4.38 是错误的！)</p><p>OpenSSL version <code>1.1.1</code> or greater.</p><p>CentOS 8 和 Ubuntu 20.04 自带软件包满足要求，低版本需要编译安装。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@c8 ~]# openssl version</span><br><span class="line">OpenSSL 1.1.1c FIPS  28 May 2019</span><br><span class="line"></span><br><span class="line">[root@c8 ~]# dnf list httpd</span><br><span class="line">Installed Packages</span><br><span class="line">httpd.x86_64        2.4.37-21.module_el8.2.0+382+15b0afa8        @AppStream</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@u20:~# openssl version</span><br><span class="line">OpenSSL 1.1.1f  31 Mar 2020</span><br><span class="line"></span><br><span class="line">root@u20:~# apt list apache2</span><br><span class="line">Listing... Done</span><br><span class="line">apache2/focal 2.4.41-4ubuntu3 amd64</span><br></pre></td></tr></table></figure></p><p><strong>启用 TLS 1.3 和 1.2</strong></p><p>The Apache version 2.4.36 or higher versions support TLS v1.3. You must upgrade Apache packages before enabled TLS 1.3 in SSL settings.</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SSLProtocol -all +TLSv1.2 +TLSv1.3</span><br></pre></td></tr></table></figure></p><p>配置项如下所示:</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">    ServerName www.sysin.org</span><br><span class="line">    DocumentRoot /var/www/html</span><br><span class="line"></span><br><span class="line">    SSLEngine on</span><br><span class="line">    SSLProtocol -all +TLSv1.2 +TLSv1.3</span><br><span class="line">    SSLCertificateFile &quot;/path/to/www.sysin.org.cert&quot;</span><br><span class="line">    SSLCertificateKeyFile &quot;/path/to/www.sysin.org.key&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>记得重启 Apache 服务才能生效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h2&gt;
&lt;p&gt;TLS 1.3 是时隔九年对 TLS 1.2 等之前版本的新升级，也是迄今为止改动最大的一次。针对目前已知的安全威胁，IETF（Internet Engineering Task Force，互联网工程任务组）制定 TLS 
      
    
    </summary>
    
    
    
      <category term="HTTP" scheme="http://sysin.org/tags/HTTP/"/>
    
      <category term="F5" scheme="http://sysin.org/tags/F5/"/>
    
      <category term="Nginx" scheme="http://sysin.org/tags/Nginx/"/>
    
      <category term="TLS" scheme="http://sysin.org/tags/TLS/"/>
    
      <category term="IIS" scheme="http://sysin.org/tags/IIS/"/>
    
      <category term="Apache" scheme="http://sysin.org/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>用于 VMware 的 macOS Catalina 10.15.5 iso 百度网盘 下载</title>
    <link href="http://sysin.org/article/Download-VMware-macOS-Catalina-iso/"/>
    <id>http://sysin.org/article/Download-VMware-macOS-Catalina-iso/</id>
    <published>2020-05-30T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:51.509Z</updated>
    
    <content type="html"><![CDATA[<p>基于MAS原版app制作，安全无添加，无任何logo，文件体积小（xz压缩后不到350M），适合长期持有。</p><blockquote><p>下载链接: https://pan.baidu.com/s/1wdrFp6y-qC7dUHtCRMv9xA  密码: bb3v</p></blockquote><p>说明：两个压缩文件是一样的，一个zip一个xz格式。</p><p><strong>附：可用的VMware 软件下载链接</strong></p><p>1.<a href="https://sysin.org/article/Download-VMware-ESXi-7.0-MOD/">ESXi 7.0 定制版镜像</a></p><p>2.Windows：<a href="ed2k://%7Cfile%7CVMware-Workstation-Lite-15.5.5-16285975%E7%B2%BE%E7%AE%80%E5%AE%98%E6%96%B9%E4%B8%AD%E6%96%87%E5%AE%89%E8%A3%85%E6%B3%A8%E5%86%8C%E7%89%88.exe%7C251983636%7C01C2F2541A6EF19955988D2916776CD4%7C/" target="_blank" rel="noopener">VMware Workstation 15.5.5 x64 精简定制版</a>：ed2k://|file|VMware-Workstation-Lite-15.5.5-16285975%E7%B2%BE%E7%AE%80%E5%AE%98%E6%96%B9%E4%B8%AD%E6%96%87%E5%AE%89%E8%A3%85%E6%B3%A8%E5%86%8C%E7%89%88.exe|251983636|01C2F2541A6EF19955988D2916776CD4|/</p><p>3.macOS：VMware Fusion 15.5.5 <a href="https://www.vmware.com/go/getfusion" target="_blank" rel="noopener">官网下载链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基于MAS原版app制作，安全无添加，无任何logo，文件体积小（xz压缩后不到350M），适合长期持有。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载链接: https://pan.baidu.com/s/1wdrFp6y-qC7dUHtCRMv9xA  密码: bb3v
      
    
    </summary>
    
    
    
      <category term="Download" scheme="http://sysin.org/tags/Download/"/>
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>VMware ESXi 7.0 SLIC 2.5 / macOS / LegacyCPU MOD ISO 百度网盘 下载</title>
    <link href="http://sysin.org/article/Download-VMware-ESXi-7.0-MOD/"/>
    <id>http://sysin.org/article/Download-VMware-ESXi-7.0-MOD/</id>
    <published>2020-05-28T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:43.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>下载链接: https://pan.baidu.com/s/1-fjtDCj3bFXgTjZyJBpTIA  密码: 4sv7</p></blockquote><p>申明：BIOS文件以及macOS支持等底层修改都来自网上论坛的分享，笔者只是做了ISO的集成😁。</p><p><strong>特性：</strong></p><ul><li><p>SLIC 2.5：使用 OEM SLP keys 可以支持 Windows Server 2019</p></li><li><p>macOS Unlocker：直接运行 macOS Catalina 10.15</p></li><li><p>LegacyCPU support，允许在不受支持的 CPU 上安装 ESXi 7.0</p></li></ul><h2 id="vmware_155_dell_25_bios-efi_mod">VMware_15.5_DELL_2.5_BIOS-EFI_Mod</h2><p><strong>SLP 2.5</strong> (BIOS.440 &amp; EFIs - Dell 2.5 SLIC) - NT 6.0  (Vista/Server 2008), NT 6.1 (7/Server 2008 R2), NT 6.2 (Server 2012), NT 6.3 (Server 2012 R2), NT 10.0 (Server 2016/Server 2019)</p><p>截图：<img src="https://img-blog.csdnimg.cn/2020053115163459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldGdj,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="支持-macos-catalina">支持 macOS Catalina</h2><p>在VMware中直接新建虚机，操作系统选择“Apple macOS 10.15 (64-bit)”，即可安装和正常启动。</p><p>截图：<img src="https://img-blog.csdnimg.cn/20200531151851593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldGdj,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>用于VMware的macOS 10.15.5 安装映像iso下载：<a href="https://blog.csdn.net/netgc/article/details/106456323" target="_blank" rel="noopener">链接</a></p><h2 id="支持非官方支持的cpu">支持非官方支持的CPU</h2><p>修改启动参数，在官方不受支持的CPU的服务器上可以正常安装。</p><blockquote><p>根据 “VMware vSphere 7.0 Release Notes”，以下 CPU 已经不受支持（无法安装或者升级 ESXi 7.0）</p></blockquote><p>Comparing the processors supported by vSphere 6.7, vSphere 7.0 no longer supports the following processors:</p><ul><li>Intel Family 6, Model = 2C (Westmere-EP)</li><li>Intel Family 6, Model = 2F (Westmere-EX)</li></ul><p>笔者在一台10年的服务器上安装运行良好：HP DL 380 G7，Intel(R) Xeon(R) CPU E5606</p><p>截图：<img src="https://img-blog.csdnimg.cn/20200531151932313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldGdj,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="提供dell-hpe定制版iso集成">提供Dell、HPE定制版iso集成</h2><p>提供标准版、Dell定制版和HPE定制版三个iso文件。</p><p>名称: VMware-VMvisor-Installer-7.0.0-15843807.x86_64-SLIC2.5-GC.iso大小: 369336320 字节 (352 MiB)CRC32: 6E0AD081CRC64: 5A1D267F015EFCD7SHA256: B03B1B3D7AD533277293CA7C1725B1F50F755973795E327A5107E5475469D9C0SHA1: 8F28A06E91976A495DA657232337CABBAEDA02B8BLAKE2sp: 7D7F76CAE823A7F199DC9C5DFC80EF4FC334F9F1BBB651DD2E0D1987D070F4C8</p><p>名称: VMware-VMvisor-Installer-7.0.0-15843807.x86_64-DellEMC_Customized-A00-SLIC2.5-GC.iso大小: 369373184 字节 (352 MiB)CRC32: 95D1712BCRC64: 1AAF946A016147ABSHA256: 2FD51DF01AE46AB4C3DEE6CCC29C5E8B315E4303DC463DCC634A5A4407EAA3FCSHA1: 233BF2F421BDE8A95E7CAADE1903C7869BF2D23FBLAKE2sp: 867FDDAAF826E53454991DC680EFF58D5AB996808D4D7E4A1ED12F695083AB9F</p><p>名称: VMware_ESXi_7.0.0_15843807_HPE_700.0.0.10.5.0.108_April2020-SLIC2.5-GC.iso大小: 410791936 字节 (391 MiB)CRC32: C95C956ECRC64: 9C4AB5D0BE620CD6SHA256: 670F3ACF5E2D0E09F866ED1356FF2766DB690FCD697F4CC69BE1798ACFEA7288SHA1: 2DCA36F3B3AF708BF5D258320A604B7B37D7BFDEBLAKE2sp: C1CE1C810DB82BAE64211539B4051885A36EED16F2A01CCDC25D24F5D7D41B7A</p><blockquote><p>下载链接: https://pan.baidu.com/s/1-fjtDCj3bFXgTjZyJBpTIA  密码: 4sv7</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;下载链接: https://pan.baidu.com/s/1-fjtDCj3bFXgTjZyJBpTIA  密码: 4sv7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;申明：BIOS文件以及macOS支持等底层修改都来自网上论坛的分享，笔者只是做
      
    
    </summary>
    
    
    
      <category term="VMware" scheme="http://sysin.org/tags/VMware/"/>
    
      <category term="Download" scheme="http://sysin.org/tags/Download/"/>
    
  </entry>
  
  <entry>
    <title>macOS Catalina 10.15.5 正式版 下载 百度网盘</title>
    <link href="http://sysin.org/article/Download-macOS-Catalina-10.15.5/"/>
    <id>http://sysin.org/article/Download-macOS-Catalina-10.15.5/</id>
    <published>2020-05-27T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:31.360Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://appleinsider.com/articles/20/05/26/apple-releases-macos-catalina-10155-with-new-battery-health-management-feature" target="_blank" rel="noopener">Apple releases macOS Catalina 10.15.5 with new battery health management feature</a></p><p>macOS Catalina 10.15.5 = (19F96) 05/26/2020</p><blockquote><p>下载链接: https://pan.baidu.com/s/1z-n_UTnY3Wty7dEu-tf8mw  密码: dnns</p></blockquote><p>基于MAS原版制作，安全无添加，无任何logo，适合长期持有😄。</p><p><img src="https://img-blog.csdnimg.cn/20200531094401333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25ldGdj,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://appleinsider.com/articles/20/05/26/apple-releases-macos-catalina-10155-with-new-battery-health-management-feature&quot; targe
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>如何禁用 Firefox 自动更新（Windows、macOS、Linux）</title>
    <link href="http://sysin.org/article/Disable-Firefox-Auto-update-Windows_macOS_Linux/"/>
    <id>http://sysin.org/article/Disable-Firefox-Auto-update-Windows_macOS_Linux/</id>
    <published>2020-05-15T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:16.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows">Windows</h2><h3 id="方法一使用策略文件">方法一：使用策略文件</h3><p>官方策略模板：https://github.com/mozilla/policy-templates/releases</p><p>创建策略文件：&lt;Firefox安装目录&gt;\distribution\policies.json</p><p>内容如下，</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;policies&quot;: &#123;</span><br><span class="line">    &quot;DisableAppUpdate.&quot;: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="方法二使用注册表">方法二：使用注册表</h3><p>操作步骤：</p><ul><li><p>浏览到 “HKEY_LOCAL_MACHINE\Software\Policies” 创建项 “Mozilla” 在创建项 “Firefox” 创建完毕即 “HKEY_LOCAL_MACHINE\Software\Policies\Mozilla\Firefox”</p></li><li><p>在上述路径，右键点击空白处，新建一个 DWORD (32-Bit) Value，名称为 “DisableAppUpdate”</p></li><li><p>双击创建的 “DisableAppUpdate”，将值修改为 “1”。</p></li></ul><p>直接使用注册表文件</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Mozilla\Firefox]</span><br><span class="line">&quot;DisableAppUpdate&quot;=dword:00000001</span><br></pre></td></tr></table></figure></p><p><strong>直接使用CMD</strong>（推荐，最便捷）</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Mozilla\Firefox&quot; /v DisableAppUpdate /t REG_DWORD /d 1 /f</span><br></pre></td></tr></table></figure></p><h3 id="效果">效果</h3><p>此时 “选项” 中 Firefox 更新，提示“更新已被系统管理员禁用”，检查更新按钮也不可用！</p><p>参考文章：https://www.webnots.com/how-to-disable-automatic-update-in-firefox/</p><h2 id="macos">macOS</h2><h3 id="方法一配置策略文件">方法一：配置策略文件</h3><p>获取最新或者对应版本的策略模板：https://github.com/mozilla/policy-templates/releases</p><p>自动更新策略描述如下：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;policies&quot;: &#123;</span><br><span class="line">    &quot;DisableAppUpdate&quot;: true | false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建 Firefox 策略配置文件</p><p><code>Firefox.app/Contents/Resources/distribution/policies.json</code></p><p>禁用自动更新则将以下内容写入 policies.json 文件中</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"policies"</span>: &#123;</span><br><span class="line">    <span class="attr">"DisableAppUpdate"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="方法二命令行实现">方法二：命令行实现</h3><p>可以直接执行如下终端命令，更加便捷，不用额外配置上述策略文件。</p><ul><li>启用策略</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/org.mozilla.firefox EnterprisePoliciesEnabled -bool TRUE</span><br></pre></td></tr></table></figure></p><ul><li>禁用自动更新</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/org.mozilla.firefox DisableAppUpdate -bool TRUE</span><br></pre></td></tr></table></figure></p><h3 id="效果">效果</h3><p>此时 “首选项” 中 Firefox 更新，提示“更新已被系统管理员禁用”，检查更新按钮也不可用！</p><h2 id="linux">Linux</h2><p>On Linux, the file goes into <code>firefox/distribution</code>, where <code>firefox</code> is the installation directory for firefox, which varies by distribution or you can specify system-wide policy by placing the file in <code>/etc/firefox/policies</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;
&lt;h3 id=&quot;方法一使用策略文件&quot;&gt;方法一：使用策略文件&lt;/h3&gt;
&lt;p&gt;官方策略模板：https://github.com/mozilla/policy-templates/releases&lt;/p&gt;
&lt;p&gt;创建策略文
      
    
    </summary>
    
    
    
      <category term="Firefox" scheme="http://sysin.org/tags/Firefox/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 20.04 LTS (Focal Fossa) 安装笔记</title>
    <link href="http://sysin.org/article/Ubuntu-20.04-Install/"/>
    <id>http://sysin.org/article/Ubuntu-20.04-Install/</id>
    <published>2020-05-15T02:10:00.000Z</published>
    <updated>2020-08-03T09:42:20.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新特性">新特性</h2><h3 id="updated-packages">Updated Packages</h3><p><strong>Linux Kernel 5.4</strong></p><p><strong>Toolchain Upgrades 🛠️</strong></p><pre><code>Ubuntu 20.04 LTS comes with refreshed state-of-the-art toolchain including new upstream releases of glibc 2.31, ☕ OpenJDK 11, rustc 1.41, GCC 9.3, 🐍 Python 3.8.2, 💎 ruby 2.7.0, php 7.4, 🐪 perl 5.30, golang 1.13.</code></pre><p><strong>Ubuntu Desktop</strong></p><ul><li>New graphical boot splash (integrates with the system BIOS logo).</li><li>Refreshed <a href="https://ubuntu.com/blog/new-ubuntu-theme-in-development-for-20-04" target="_blank" rel="noopener">Yaru theme</a> 🎨<ul><li><a href="https://twitter.com/m_wimpress/status/1232246572479590401" target="_blank" rel="noopener">Light/Dark theme switching</a></li></ul></li><li>GNOME 3.36</li><li><a href="https://www.mesa3d.org/" target="_blank" rel="noopener">Mesa</a> 20.0 OpenGL stack</li><li><a href="http://www.bluez.org/" target="_blank" rel="noopener">BlueZ</a> 5.53</li><li><a href="https://www.freedesktop.org/wiki/Software/PulseAudio/" target="_blank" rel="noopener">PulseAudio</a> 14.0 (prerelease)</li><li><a href="https://www.mozilla.org/en-US/firefox/75.0/releasenotes/" target="_blank" rel="noopener">Firefox 75.0</a></li><li><a href="https://www.thunderbird.net/en-US/thunderbird/68.7.0/releasenotes/" target="_blank" rel="noopener">Thunderbird 68.7.0</a></li><li><a href="https://wiki.documentfoundation.org/ReleaseNotes/6.4" target="_blank" rel="noopener">LibreOffice 6.4</a></li></ul><h3 id="network-configuration">Network configuration</h3><p>With this Ubuntu release, <a href="https://netplan.io/" target="_blank" rel="noopener">netplan.io</a> has grown multiple new features, some of which are:</p><ul><li>Basic support for configuring SR-IOV network devices. Starting with  netplan.io 0.99, users can declare Virtual Functions for every SR-IOV  Physical Function, configure those as any other networking device and  set hardware VLAN VF filtering on them.</li><li>Support for GSM modems via the <a href="https://wiki.ubuntu.com/NetworkManager" target="_blank" rel="noopener">NetworkManager</a> backend via the <code>modems</code> section.</li><li>Adding <a href="https://wiki.ubuntu.com/WiFi" target="_blank" rel="noopener">WiFi</a> flags for <code>bssid</code>/<code>band</code>/<code>channel</code> settings.</li><li>Adding ability to set <code>ipv6-address-generation</code> for the <a href="https://wiki.ubuntu.com/NetworkManager" target="_blank" rel="noopener">NetworkManager</a> backend and <code>emit-lldp</code> for networkd.</li></ul><h3 id="storagefile-systems">Storage/File Systems</h3><p>ZFS 0.8.3</p><h3 id="other-base-system-changes-since-1804-lts">Other base system changes since 18.04 LTS</h3><ul><li><p>Python3 by default（Python 3.8.  Python 2.7 已经移除）</p></li><li><p>Snap Store replaces ubuntu-software</p></li></ul><h3 id="ubuntu-server">Ubuntu Server</h3><ul><li><p>Installer</p><p>The live server installer is now the preferred media to install Ubuntu Server on all architectures.</p></li><li><p>QEMU</p><p>QEMU was updated to 4.2 release.</p></li><li><p>libvirt</p><p>libvirt was updated to version 6.0.</p></li><li><p>dpdk</p><p>Ubuntu 20.04 LTS includes the latest stable release 19.11.1 of the latest LTS series 19.11.x. The very latest (non-stable) version being 20.02 was not chosen for  downstream projects of DPDK (like Open vSwitch) not being compatible  yet.</p></li><li><p>Open vSwitch</p><p>Open vSwitch has been updated to 2.13.</p></li><li><p>Chrony</p><p>Chrony been updated to <a href="https://chrony.tuxfamily.org/news.html" target="_blank" rel="noopener">version 3.5</a>.</p></li><li><p>cloud-init</p><p>Cloud-init was updated to version 20.1-10.</p></li><li><p>PHP 7.4</p></li><li><p>Ruby 2.7</p></li><li><p>Ruby on Rails 5.2.3</p></li><li><p>Ubuntu HA/Clustering</p><p>KronosnetCorosync 3.0Pacemaker 2.0Resource AgentsFence Agentskeepalived</p></li><li><p>isc-kea 1.6 stable track（dhcp server）</p></li><li><p>Bind 9.16</p></li><li><p>OpenSSH updates with U2F Support</p></li><li><p>HAProxy 2.0</p></li><li><p>Apache, TLSv1.3, client cert auth</p></li><li><p>Samba 4.11</p></li><li><p>PostgreSQL 12</p></li><li><p>nginx</p><p>Starting in Focal Fossa, nginx-core no longer ships with the legacy geoip module enabled by default. If you are using the legacy geoip module in nginx,  you may run into upgrade issues if you do not deactivate the geoip  module in your configuration. This was done as part of the deprecation  of GeoIP legacy support.</p></li><li><p>Squid 4.x</p></li><li><p>s390x</p></li><li><p>OpenStack Ussuri</p></li><li><p>Ceph was updated to the 15.2.1 release</p></li></ul><p><strong>完整更新内容请查阅发行说明：</strong></p><ul><li>https://wiki.ubuntu.com/FocalFossa/ReleaseNotes</li></ul><h2 id="1-安装摘要">1. 安装摘要</h2><p>18.04：安装界面变化比较大，参看截图，默认 SSH Server 已经安装（测试 18.04.3 修改为需要手动勾选），没有时区选择界面</p><p>20.04：安装界面少了步骤的数字提示，参看截图，SSH Server 需要勾选安装，没有时区选择界面</p><p>注意：分区如果选择 LVM，默认 / 目录只使用了4G，需要编辑使用全部容量</p><h2 id="2-格式化网卡名称">2. 格式化网卡名称</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">类似 CentOS 7，及 Ubuntu 16.04 开始，安装好后网卡名称变成 ens160 了</span><br><span class="line"><span class="meta">#</span> 编辑 grub 配置文件</span><br><span class="line">sudo vi /etc/default/grub</span><br><span class="line">修改 GRUB_CMDLINE_LINUX=""为GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 直接使用sed编辑</span><br><span class="line">sudo sed -i "/^GRUB_CMDLINE_LINUX=""/c GRUB_CMDLINE_LINUX=\"net.ifnames=0 biosdevname=0\"" /etc/default/grub</span><br><span class="line"><span class="meta">#</span> 更新 grub 配置文件</span><br><span class="line">sudo update-grub</span><br><span class="line"><span class="meta">#</span> 然后下一节编辑配置文件并重启生效</span><br></pre></td></tr></table></figure></p><h2 id="3-网络配置">3. 网络配置</h2><p>查看 IP 地址信息</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip address</span><br><span class="line"># 简写 ip a</span><br><span class="line"># ifconfig也支持</span><br></pre></td></tr></table></figure></p><p>通过 netplan 管理网络</p><blockquote><p>18.04:cat /etc/network/interfacesifupdown has been replaced by netplan默认使用netplan管理网络</p><p>18.04默认配置文件：/etc/netplan/50-cloud-init.yaml</p><p>20.04:cat /etc/network/interfacescat: /etc/network/interfaces: No such file or directory</p><p>20.04默认配置文件：/etc/netplan/00-installer-config.yaml</p></blockquote><p>配置静态IP地址</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sudo</span> <span class="string">vim</span> <span class="string">/etc/netplan/00-installer-config.yaml</span></span><br><span class="line"><span class="comment"># 格式如下：</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eth0:</span> <span class="comment">#ens160修改为 eth0</span></span><br><span class="line"><span class="attr">      addresses:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">10.19</span><span class="number">.190</span><span class="number">.5</span><span class="string">/24</span></span><br><span class="line"><span class="attr">      gateway4:</span> <span class="number">10.19</span><span class="number">.190</span><span class="number">.1</span></span><br><span class="line"><span class="attr">      nameservers:</span></span><br><span class="line"><span class="attr">        addresses:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="number">10.19</span><span class="number">.190</span><span class="number">.11</span></span><br><span class="line"><span class="bullet">          -</span> <span class="number">10.19</span><span class="number">.190</span><span class="number">.12</span></span><br><span class="line"><span class="attr">        search:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">sysin.org</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 运行以下命令使配置生效</span><br><span class="line">sudo netplan apply</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重启系统后彻底生效</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></p><p>配置为DHCP</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo '</span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: yes</span><br><span class="line">      dhcp6: yes</span><br><span class="line">' &gt; /etc/netplan/00-installer-config.yaml</span><br></pre></td></tr></table></figure></p><p>恢复传统的网络配置方式</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 可以恢复原有配置方式</span><br><span class="line">sudo apt install net-tools #ifconfig、netstat、route等命令集</span><br><span class="line">sudo apt install ifupdown #模板未执行该命令</span><br></pre></td></tr></table></figure></p><p>补充：yaml 基础</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">大小写敏感</span><br><span class="line">使用缩进表示层级关系</span><br><span class="line">缩进时不允许使用Tab键，只允许使用空格</span><br><span class="line">缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</span><br></pre></td></tr></table></figure></p><p>缩进建议使用2个空格，使用短横线“-”表示列表时，”- “后面的条目需要对齐，如果使用超过2个空格缩进，格式将有误。</p><p>配置静态路由示例</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      addresses:</span><br><span class="line">        - 10.19.190.5/24</span><br><span class="line">      #gateway4: 10.19.190.254</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses:</span><br><span class="line">          - 10.19.190.11</span><br><span class="line">          - 10.19.190.12</span><br><span class="line">        search:</span><br><span class="line">          - sysin.org</span><br><span class="line">      routes:</span><br><span class="line">        - to: 0.0.0.0/0</span><br><span class="line">          via: 10.19.190.254</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.19.177.0/24</span><br><span class="line">          via: 10.19.190.1</span><br><span class="line">          metric: 100</span><br></pre></td></tr></table></figure></p><h2 id="4-修改主机名">4. 修改主机名</h2><p>设置主机名</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line"><span class="meta">#</span> 修改为主机名 ubuntu01</span><br><span class="line">ubuntu01</span><br></pre></td></tr></table></figure></p><p>添加domain name</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"><span class="meta">#</span> 添加一行</span><br><span class="line">127.0.0.1  ubuntu01.sysin.org ubuntu01</span><br><span class="line"><span class="meta">#</span> 注意这里的格式，IP 后面先写 FQDN 再写主机名，与 CentOS 相同</span><br><span class="line"><span class="meta">#</span> 先写主机名后写 FQDN 不影响解析，但是'hostname -f'命令无法只能显示主机名</span><br></pre></td></tr></table></figure></p><p>查看FQDN</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostname -f</span><br><span class="line"><span class="meta">#</span> 正确显示如下</span><br><span class="line">ubuntu01.sysin.org</span><br></pre></td></tr></table></figure></p><h2 id="5-设置时区">5. 设置时区</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure></p><h2 id="6-修改国内镜像源">6. 修改国内镜像源</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 模板使用aliyun</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 备份</span><br><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 替换为阿里云镜像源</span><br><span class="line">sudo sed -i 's/cn.archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list</span><br><span class="line"><span class="meta">#</span> 提示：-i 写入文件，s 替换命令</span><br><span class="line"></span><br><span class="line">选择时区后镜像地址为cn.archive.ubuntu.com，注意修改替换命令</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 根据实际网络情况选择镜像，可以Ping镜像地址查看延迟</span><br><span class="line"><span class="meta">#</span> 网易163</span><br><span class="line">sudo sed -i 's/cn.archive.ubuntu.com/mirrors.163.com/' /etc/apt/sources.list</span><br><span class="line"><span class="meta">#</span> 中科大</span><br><span class="line">sudo sed -i 's/cn.archive.ubuntu.com/mirrors.ustc.edu.cn/' /etc/apt/sources.list</span><br><span class="line"><span class="meta">#</span> 清华</span><br><span class="line">sudo sed -i 's/cn.archive.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/' /etc/apt/sources.list</span><br></pre></td></tr></table></figure></p><p>更新</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update #更新源</span><br><span class="line">sudo apt upgrade #更新已安装的包</span><br><span class="line">sudo apt dist-upgrade #升级系统</span><br><span class="line">sudo apt clean &amp;&amp; sudo apt autoclean #清理下载文件的存档</span><br><span class="line"><span class="meta">#</span> apt 是新版命令，替代 apt-get，apt-get 将来会淘汰</span><br></pre></td></tr></table></figure></p><h2 id="7-安装-snmp模板未配置">7. 安装 SNMP（模板未配置）</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install snmpd snmp</span><br></pre></td></tr></table></figure></p><h2 id="8-配置-ntp">8. 配置 NTP</h2><p>安装</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install chrony</span><br><span class="line"></span><br><span class="line">sudo systemctl enable chrony</span><br><span class="line">sudo systemctl start chrony</span><br><span class="line">sudo systemctl status chrony</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看配置文件，暂使用默认配置</span><br><span class="line">cat /etc/chrony/chrony.conf</span><br></pre></td></tr></table></figure></p><p>chrony 自带一个交互式工具 chronyc，在配置文件中指定了时间服务器之后，如果想查看同步状态，可以进入这个交互式工具的交互界面。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chronyc 有很多的子命令，可以输入 help 来查看</span><br><span class="line">chronyc&gt; help</span><br><span class="line">    选项：</span><br><span class="line">    sources [-v]    显示关于当前来源的信息</span><br><span class="line">    sourcestats [-v]      显示时间同步状态（如时间偏移了多少之类）</span><br></pre></td></tr></table></figure></p><h2 id="9-虚机安装-vmware-tools">9. 虚机安装 VMware Tools</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Ubuntu 16.04 在 ESXi 中安装系统时已经自动安装了 vm-tools（18.04、20.04相同）</span><br><span class="line"># 20.04 自带 vm-tools 版本为 11.0.5，与 ESXi 7.0.0 匹配</span><br><span class="line">sudo apt install open-vm-tools</span><br></pre></td></tr></table></figure></p><h2 id="10-安装必备工具">10. 安装必备工具</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zip unzip</span><br><span class="line">sudo apt install gcc make</span><br><span class="line">sudo apt install lrzsz</span><br><span class="line">sudo apt install htop #20.04已默认安装（18.04已默认安装）</span><br><span class="line">sudo apt install lnav</span><br><span class="line">sudo apt install fd-find #fd命令，20.04已经收录</span><br><span class="line">sudo apt install ripgrep #rg命令，20.04已经收录</span><br><span class="line">sudo apt install tree</span><br><span class="line">sudo apt install net-tools #ifconfig、netstat、route等命令集</span><br><span class="line">sudo apt install ntp ntpdate ntpstat #可选，模板未安装</span><br><span class="line"><span class="meta">#</span> nc lsof pstree 系统自带</span><br></pre></td></tr></table></figure></p><h2 id="11-开启-root-账号登录">11. 开启 root 账号登录</h2><p>Ubuntu 默认禁用 root 用户登录，安装时候创建特定用户作为管理员帐号，启用 root 用户步骤如下：</p><ul><li>修改 root 密码</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure></p><ul><li>修改配置文件</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak</span><br><span class="line"></span><br><span class="line">sudo vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p>找到下面相关配置：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line"></span><br><span class="line">#LoginGraceTime 2m</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">#StrictModes yes</span><br><span class="line">#MaxAuthTries 6</span><br><span class="line">#MaxSessions 10</span><br><span class="line"></span><br><span class="line">#PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"># Expect .ssh/authorized_keys2 to be disregarded by default in future.</span><br><span class="line">#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2</span><br></pre></td></tr></table></figure></p><p>修改如下</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">增加一句</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">快速配置：</span><br><span class="line">sudo sed -i "/^#PermitRootLogin/c "PermitRootLogin" "yes"" /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p>补充</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin prohibit-password  #允许root登录，但禁止适用密码认证</span><br><span class="line">可以配合使用Pubkey认证，修改PubkeyAuthentication yes</span><br></pre></td></tr></table></figure></p><ul><li>重启服务生效</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart ssh</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;新特性&quot;&gt;新特性&lt;/h2&gt;
&lt;h3 id=&quot;updated-packages&quot;&gt;Updated Packages&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Linux Kernel 5.4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain Upgrades
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://sysin.org/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://sysin.org/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>macOS Catalina 提示：“应用名称” 已损坏，无法打开的解决方法总结</title>
    <link href="http://sysin.org/article/macOS_Catalina_%E6%8F%90%E7%A4%BA%EF%BC%9A%E2%80%9C%E5%BA%94%E7%94%A8%E5%90%8D%E7%A7%B0%E2%80%9D%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://sysin.org/article/macOS_Catalina_%E6%8F%90%E7%A4%BA%EF%BC%9A%E2%80%9C%E5%BA%94%E7%94%A8%E5%90%8D%E7%A7%B0%E2%80%9D%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-01T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:28.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象">现象</h2><p>提示：“应用名称”已损坏，无法打开。 您应该将它移到废纸篓。提示：“应用名称”已损坏，无法打开。 您应该推出磁盘映像。(在DMG中双击)</p><p>提示：无法打开“应用名称”，因为无法验证开发者。 macOS无法验证此App不包含恶意软件。</p><p>提示：“应用名称”将对您的电脑造成伤害。 您应该将它移到废纸篓。</p><hr><h2 id="1允许任何来源下载的app运行">1.允许“任何来源”下载的App运行</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure></p><h2 id="2重新签名">2.重新签名</h2><p>第一步一般都已经执行了，之前App运行也是正常的，很多和谐软件来自TNT，Apple移除了TNT的证书，所以出现报错。</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --force --deep --sign - /Applications/name.app</span><br></pre></td></tr></table></figure></p><p><strong>Requisite</strong>: Xcode or the Apple Command Line ToolsTo install, execute</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure></p><p>执行后一般可以正常运行了，如果任然提示已损坏，继续下一步。</p><h2 id="3移除这个应用的安全隔离属性">3.移除这个应用的安全隔离属性</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine /Applications/name.app</span><br></pre></td></tr></table></figure></p><p>若提示：无法打开“应用名称”，因为无法验证开发者。macOS无法验证此App不包含恶意软件。</p><p>可以忽略第二步操作，直接第三步。</p><p>提示：可以将App重新打包制作DMG文件，保存或者在其他电脑上使用。</p><h2 id="4覆盖恶意软件保护">4.覆盖恶意软件保护</h2><p>还有一种情况，</p><p>提示：“应用名称”将对您的电脑造成伤害。 您应该将它移到废纸篓。</p><p>步骤2和3操作是无效的。</p><p>解决办法：</p><p>访达 -&gt; 应用程序 -&gt; 右击软件 -&gt; 显示简介勾选&quot;覆盖恶意软件保护&quot;</p><p>说明：正常应用不会出现这个选项</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;现象&quot;&gt;现象&lt;/h2&gt;
&lt;p&gt;提示：“应用名称”已损坏，无法打开。 您应该将它移到废纸篓。
提示：“应用名称”已损坏，无法打开。 您应该推出磁盘映像。(在DMG中双击)&lt;/p&gt;
&lt;p&gt;提示：无法打开“应用名称”，因为无法验证开发者。 macOS无法验证此App不包
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>ALPN (Application-Layer Protocol Negotiation) </title>
    <link href="http://sysin.org/article/ALPN/"/>
    <id>http://sysin.org/article/ALPN/</id>
    <published>2020-05-01T02:00:00.000Z</published>
    <updated>2020-08-03T05:31:49.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ALPN (Application Layer Protocol Negotiation)是TLS的扩展，允许在安全连接的基础上进行应用层协议的协商。ALPN支持任意应用层协议的协商，目前应用最多是HTTP2的协商。当前主流浏览器，都只支持基于 HTTPS 部署的 HTTP/2，因为浏览器是基于ALPN协议来判断服务器是否支持HTTP2协议。</p></blockquote><h2 id="about">About</h2><p><a href="https://developer.mozilla.org/en-US/docs/Glossary" target="_blank" rel="noopener">See MDN Web Docs Glossary: Definitions of Web-related terms</a><a href="https://developer.mozilla.org/en-US/docs/Glossary/ALPN" target="_blank" rel="noopener">ALPN</a></p><p><strong>Application-Layer <a href="https://developer.mozilla.org/en-US/docs/Glossary/Protocol" target="_blank" rel="noopener">Protocol</a> Negotiation</strong> (<strong>ALPN</strong>) is a <a href="https://developer.mozilla.org/en-US/docs/Glossary/TLS" target="_blank" rel="noopener">TLS</a> extension which indicates what application layer protocol is  negotiating the encryped connection without requiring additional round  trips.</p><table><thead><tr><th>Protocol</th><th>Identification sequence</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/en-US/docs/Glossary/HTTP" target="_blank" rel="noopener">HTTP</a>/1.1</td><td><code>0x68 0x74 0x74 0x70 0x2F 0x31 0x2E 0x31</code> (&quot;http/1.1&quot;)</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Glossary/HTTP_2" target="_blank" rel="noopener">HTTP/2</a></td><td><code>0x68 0x32</code> (&quot;h2&quot;)</td></tr><tr><td>HTTP/2 over cleartext <a href="https://developer.mozilla.org/en-US/docs/Glossary/TCP" target="_blank" rel="noopener">TCP</a></td><td><code>0x68 0x32 0x63</code> (&quot;h2c&quot;)</td></tr></tbody></table><h2 id="specifications">Specifications</h2><table><thead><tr><th>Specification</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td><a href="https://tools.ietf.org/html/rfc7301" target="_blank" rel="noopener">RFC 7301</a></td><td>IETF RFC</td><td>Initial definition.</td></tr></tbody></table><h2 id="support">Support</h2><p><strong>浏览器和服务端都支持ALPN 协商，是用上 HTTP/2 的大前提。</strong></p><ul><li>关于浏览器支持</li></ul><p>参看<a href="https://www.nginx.com/blog/supporting-http2-google-chrome-users/" target="_blank" rel="noopener">nginx官网文章</a></p><p>In May 2016, Google released Chrome build 51, eliminating support for SPDY and NPN in favor of HTTP/2 and ALPN. Although concern was  expressed <a href="https://ma.ttias.be/day-google-chrome-disables-http2-nearly-everyone-may-31st-2016/" target="_blank" rel="noopener">publicly</a> and privately about the negative consequences before the change was made, Google went ahead, providing a <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=527066" target="_blank" rel="noopener">brief explanation</a> of its reasons for dropping NPN.</p><p>At that time Chrome was the only major browser that didn’t support  NPN, so users could regain HTTP/2 access by switching to another  browser. However, by mid‑2017 all of the <a href="https://www.w3counter.com/globalstats.php" target="_blank" rel="noopener">most popular browser vendors</a> except Safari (version 10) had dropped support for NPN, starting with the following versions (see the <strong>Protocol Details</strong> section on the page for each browser at <a href="https://www.ssllabs.com/ssltest/clients.html" target="_blank" rel="noopener">Qualys SSL Labs</a>):</p><pre><code>- Chrome 51- Edge 12- Firefox 53- Internet Explorer 11- Opera 38</code></pre><ul><li>大部分 Web Server 都依赖 OpenSSL 库提供 https服务，是否支持 ALPN 完全取决于使用的 OpenSSL 版本，<strong>OpenSSL 1.0.2 版本才开始支持 ALPN。</strong></li></ul><p>The table summarizes Linux operating system support for ALPN and NPN as of September 2017.</p><table><thead><tr><th>Operating System</th><th>OpenSSL Version</th><th>ALPN/NPN Support</th></tr></thead><tbody><tr><td>CentOS/Oracle Linux/RHEL 6.5+, 7.0–7.3</td><td>1.0.1e</td><td>NPN</td></tr><tr><td>CentOS/Oracle Linux/RHEL 7.4+</td><td>1.0.2k</td><td>ALPN and NPN</td></tr><tr><td>Debian 7.0</td><td>1.0.1e</td><td>NPN</td></tr><tr><td>Debian 8.0</td><td>1.0.1k</td><td>NPN</td></tr><tr><td>Debian 9.0</td><td>1.1.0f</td><td>ALPN and NPN</td></tr><tr><td>Ubuntu 12.04 LTS</td><td>1.0.1</td><td>NPN</td></tr><tr><td>Ubuntu 14.04 LTS</td><td>1.0.1f</td><td>NPN</td></tr><tr><td>Ubuntu 16.04 LTS</td><td>1.0.2g</td><td>ALPN and NPN</td></tr></tbody></table><h2 id="检测工具">检测工具</h2><p>https://http2.pro/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;ALPN (Application Layer Protocol Negotiation)是TLS的扩展，允许在安全连接的基础上进行应用层协议的协商。ALPN支持任意应用层协议的协商，目前应用最多是HTTP2的协商。当前主流浏览器，都只支持基于 H
      
    
    </summary>
    
    
    
      <category term="HTTP" scheme="http://sysin.org/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>给 macOS zsh 添加 ll 命令</title>
    <link href="http://sysin.org/article/macOS_ll/"/>
    <id>http://sysin.org/article/macOS_ll/</id>
    <published>2020-04-21T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:35.347Z</updated>
    
    <content type="html"><![CDATA[<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo '</span><br><span class="line"><span class="meta">#</span>!/bin/zsh</span><br><span class="line">ls -ahlF</span><br><span class="line">' &gt; /usr/local/bin/ll</span><br></pre></td></tr></table></figure></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/ll</span><br></pre></td></tr></table></figure></p><p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> ~ % ll</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x+ 15 sa    staff   480B  7  9 21:48 ./</span><br><span class="line">drwxr-xr-x   5 root  admin   160B  1  1  2020 ../</span><br><span class="line">-r--------   1 sa    staff     9B  5 28 02:55 .CFUserTextEncoding</span><br><span class="line">-rw-r--r--@  1 sa    staff    10K  6 30 19:47 .DS_Store</span><br><span class="line">drwx------   2 sa    staff    64B  7  9 21:48 .Trash/</span><br><span class="line">-rw-------   1 sa    staff   1.4K  6 30 20:50 .zsh_history</span><br><span class="line">drwx------   7 sa    staff   224B  7  9 21:48 .zsh_sessions/</span><br><span class="line">drwx------+  8 sa    staff   256B  7  9 22:59 Desktop/</span><br><span class="line">drwx------+  3 sa    staff    96B  5 28 02:55 Documents/</span><br><span class="line">drwx------+  3 sa    staff    96B  5 28 02:55 Downloads/</span><br><span class="line">drwx------@ 60 sa    staff   1.9K  7  3 06:06 Library/</span><br><span class="line">drwx------+  4 sa    staff   128B  6 30 06:11 Movies/</span><br><span class="line">drwx------+  3 sa    staff    96B  5 28 02:55 Music/</span><br><span class="line">drwx------+  4 sa    staff   128B  6 30 06:09 Pictures/</span><br><span class="line">drwxr-xr-x+  4 sa    staff   128B  5 28 02:55 Public/</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cl
      
    
    </summary>
    
    
    
      <category term="Apple" scheme="http://sysin.org/tags/Apple/"/>
    
      <category term="macOS" scheme="http://sysin.org/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>静态路由实例</title>
    <link href="http://sysin.org/article/Static-Route-Windows_Linux_Cisco_VMware/"/>
    <id>http://sysin.org/article/Static-Route-Windows_Linux_Cisco_VMware/</id>
    <published>2020-03-20T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:48.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows">Windows</h2><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route add -p <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span> mask <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.16</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">route add -p <span class="number">10.10</span><span class="number">.11</span><span class="number">.0</span> mask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.12</span><span class="number">.1</span></span><br><span class="line">route add -p <span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span> mask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.12</span><span class="number">.1</span></span><br><span class="line">route add -p <span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span> mask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.12</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p><h2 id="cisco-ios-ios-xe">Cisco IOS、IOS-XE</h2><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip route <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.200</span><span class="number">.2254</span></span><br><span class="line">ip route <span class="number">10.10</span><span class="number">.11</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">10.10</span><span class="number">.12</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p><h2 id="cisco-nx-os">Cisco NX-OS</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">N7K(config)#vrf context management</span><br><span class="line">N7K(config-vrf)# ip route 0.0.0.0/0 &lt;下一跳IP&gt;</span><br></pre></td></tr></table></figure></p><h2 id="linux通用临时">Linux（通用，临时）</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 10.10.11.0/20 gw 10.10.12.1</span><br></pre></td></tr></table></figure></p><h2 id="centos永久">CentOS（永久）</h2><p>推荐方式：</p><p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo '</span><br><span class="line"><span class="number">10.10</span><span class="number">.12</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.16</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">' &gt; /etc/sysconfig/network-scripts/route-eth0</span><br></pre></td></tr></table></figure></p><p>另外一种方法：使用network.service（CentOS7默认，CentOS8需要<code>yum install network-scripts</code>）</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;</span><br><span class="line">any net 10.10.13.0/24 gw 10.10.15.1</span><br><span class="line">any net 10.10.14.0/24 gw 10.10.15.1</span><br><span class="line">any net 10.10.15.0/24 gw 10.10.15.1</span><br><span class="line">any net 10.10.16.0/24 gw 10.10.15.1</span><br><span class="line">&apos; &gt; /etc/sysconfig/static-routes</span><br></pre></td></tr></table></figure></p><p>验证</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route</span><br></pre></td></tr></table></figure></p><h2 id="ubuntu永久">Ubuntu（永久）</h2><p>16.04</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#添加</span><br><span class="line">cat &gt;&gt; /etc/network/interfaces &lt;&lt; EOF</span><br><span class="line"># static routes</span><br><span class="line">up route add -net 10.10.12.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.13.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.14.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.15.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.16.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#重启网络</span><br><span class="line">service networking restart</span><br><span class="line"></span><br><span class="line">#验证</span><br><span class="line">ip route</span><br></pre></td></tr></table></figure></p><h3 id="netplan"><a href="https://netplan.io/examples" target="_blank" rel="noopener">NetPlan</a></h3><p>Ubuntu 18.04、20.04及以上</p><p>18.04: /etc/netplan/50-cloud-init.yaml</p><p>20.04：/etc/netplan/00-installer-config.yaml</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eth0:</span></span><br><span class="line"><span class="attr">      addresses:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">10.10</span><span class="number">.15</span><span class="number">.5</span><span class="string">/24</span></span><br><span class="line"><span class="attr">      gateway4:</span> <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line"><span class="attr">      nameservers:</span></span><br><span class="line"><span class="attr">        addresses:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">10.10</span><span class="number">.15</span><span class="number">.11</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">10.10</span><span class="number">.15</span><span class="number">.12</span></span><br><span class="line"><span class="attr">        search:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">sysin.org</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注释gateway4</span></span><br><span class="line">sed -i 's/gateway4.*/#&amp;/' /etc/netplan/00-installer-config.yaml</span><br><span class="line"><span class="comment">//追加静态路由</span></span><br><span class="line">cat &gt;&gt; /etc/netplan/<span class="number">00</span>-installer-config.yaml &lt;&lt; EOF</span><br><span class="line">      routes:</span><br><span class="line">        - to: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.254</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">        - to: <span class="number">10.10</span><span class="number">.12</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">        - to: <span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">        - to: <span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">        - to: <span class="number">10.10</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">        - to: <span class="number">10.10</span><span class="number">.16</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">          via: <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">          metric: <span class="number">100</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><p>metric：为路由指定所需跃点数的整数值（范围是 1 ~ 9999），Metric的值越小，优先级越高。</p><p>完整配置示例（&gt;覆盖）</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/netplan/00-installer-config.yaml &lt;&lt; EOF</span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      addresses:</span><br><span class="line">        - 10.10.15.57/24</span><br><span class="line">      #gateway4: 10.10.15.254</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses:</span><br><span class="line">          - 10.10.15.11</span><br><span class="line">          - 10.10.15.12</span><br><span class="line">        search:</span><br><span class="line">          - sysin.org</span><br><span class="line">      routes:</span><br><span class="line">        - to: 0.0.0.0/0</span><br><span class="line">          via: 10.10.15.254</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.10.12.0/24</span><br><span class="line">          via: 10.10.15.1</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.10.13.0/24</span><br><span class="line">          via: 10.10.15.1</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.10.14.0/24</span><br><span class="line">          via: 10.10.15.1</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.10.15.0/24</span><br><span class="line">          via: 10.10.15.1</span><br><span class="line">          metric: 100</span><br><span class="line">        - to: 10.10.16.0/24</span><br><span class="line">          via: 10.10.15.1</span><br><span class="line">          metric: 100</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><ul><li>多网关</li></ul><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  renderer:</span> <span class="string">networkd</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eth0:</span></span><br><span class="line"><span class="attr">      addresses:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">9.0</span><span class="number">.0</span><span class="number">.9</span><span class="string">/24</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.10</span><span class="string">/24</span></span><br><span class="line"><span class="bullet">        -</span> <span class="number">11.0</span><span class="number">.0</span><span class="number">.11</span><span class="string">/24</span></span><br><span class="line">      <span class="comment">#gateway4:  # unset, since we configure routes below</span></span><br><span class="line"><span class="attr">      routes:</span></span><br><span class="line"><span class="attr">        - to:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/0</span></span><br><span class="line"><span class="attr">          via:</span> <span class="number">9.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">          metric:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">        - to:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/0</span></span><br><span class="line"><span class="attr">          via:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">          metric:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">        - to:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/0</span></span><br><span class="line"><span class="attr">          via:</span> <span class="number">11.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">          metric:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netplan apply</span><br></pre></td></tr></table></figure></p><p>补充：yaml 基础</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">大小写敏感</span><br><span class="line">使用缩进表示层级关系</span><br><span class="line">缩进时不允许使用Tab键，只允许使用空格</span><br><span class="line">缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</span><br></pre></td></tr></table></figure></p><p>缩进建议使用2个空格，使用短横线“-”表示列表时，”- “后面的条目需要对齐，如果使用超过2个空格缩进，格式将有误。</p><h2 id="vmware-esxi">VMware ESXi</h2><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#查看路由</span><br><span class="line">esxcfg-route -l</span><br><span class="line">#添加</span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> --network <span class="number">10.10</span><span class="number">.12</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> --network <span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> --network <span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> --network <span class="number">10.10</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> --network <span class="number">10.10</span><span class="number">.16</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">#删除默认路由</span><br><span class="line">esxcli network ip route ipv4 remove -n <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> -g <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">#恢复默认路由</span><br><span class="line">esxcli network ip route ipv4 add --gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.254</span> --network <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></span><br><span class="line">#查看路由</span><br><span class="line">esxcfg-route -l</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">esxcfg-route -l</span><br><span class="line"></span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.1 --network 10.10.12.0/24</span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.1 --network 10.10.13.0/24</span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.1 --network 10.10.14.0/24</span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.1 --network 10.10.15.0/24</span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.1 --network 10.10.16.0/24</span><br><span class="line"></span><br><span class="line">esxcli network ip route ipv4 remove -n 0.0.0.0/0 -g 10.10.14.1</span><br><span class="line"></span><br><span class="line">esxcli network ip route ipv4 add --gateway 10.10.14.254 --network 0.0.0.0/0</span><br><span class="line"></span><br><span class="line">esxcfg-route -l</span><br></pre></td></tr></table></figure></p><h2 id="nsx-t">NSX-T</h2><p>基于Ubuntu，但不可手动编辑，以下为 nsxcli (使用admin账号登录)</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> route prefix <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.254</span> interface eth0</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> route prefix <span class="number">10.10</span><span class="number">.12</span><span class="number">.0</span>/<span class="number">24</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> interface eth0</span><br><span class="line"><span class="built_in">set</span> route prefix <span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span>/<span class="number">24</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> interface eth0</span><br><span class="line"><span class="built_in">set</span> route prefix <span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">24</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> interface eth0</span><br><span class="line"><span class="built_in">set</span> route prefix <span class="number">10.10</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> interface eth0</span><br><span class="line"><span class="built_in">set</span> route prefix <span class="number">10.10</span><span class="number">.16</span><span class="number">.0</span>/<span class="number">24</span> gateway <span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span> interface eth0</span><br><span class="line"></span><br><span class="line">get route</span><br></pre></td></tr></table></figure></p><h2 id="vmware-vrealize-network-insight">VMware vRealize Network Insight</h2><p>基于Ubunt 16.04，与Ubuntu相同</p><p>使用support账号登录</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#添加</span><br><span class="line">cat &gt;&gt; /etc/network/interfaces &lt;&lt; EOF</span><br><span class="line"># static routes</span><br><span class="line">up route add -net 10.10.12.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.13.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.14.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.15.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">up route add -net 10.10.16.0/24 gw 10.10.15.1 dev eth0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#重启网络</span><br><span class="line">service networking restart</span><br><span class="line"></span><br><span class="line">#验证</span><br><span class="line">ip route</span><br></pre></td></tr></table></figure></p><h2 id="vmware-photon-os">VMware Photon OS</h2><p>vCenter Server 6.x/7.0</p><p>用于vRealize 8.x 系列产品（3.0），vSphere_Replication（2.0），SRM（2.0）</p><p>编辑/etc/systemd/network/10-eth0.network添加[Route]Destination=10.1.0.0/16Gateway=10.5.0.1GatewayOnlink=true #可选</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/systemd/network/<span class="number">10</span>-eth0.network &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=<span class="number">10.10</span><span class="number">.12</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Gateway=<span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">GatewayOnlink=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=<span class="number">10.10</span><span class="number">.13</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Gateway=<span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">GatewayOnlink=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=<span class="number">10.10</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Gateway=<span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">GatewayOnlink=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=<span class="number">10.10</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Gateway=<span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">GatewayOnlink=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=<span class="number">10.10</span><span class="number">.16</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Gateway=<span class="number">10.10</span><span class="number">.15</span><span class="number">.1</span></span><br><span class="line">GatewayOnlink=<span class="literal">true</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><p>重启网络</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-networkd</span><br></pre></td></tr></table></figure></p><p>验证</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route</span><br></pre></td></tr></table></figure></p><h3 id="vmware-cloud-director-availability-40">VMware Cloud Director Availability 4.0</h3><p>注意：手动修改网络配置后，WebUI中显示错误无法直接配置。</p><p>基于 Photon OS，但是网卡名称不一样。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/systemd/network/ens160.network &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=10.10.12.0/24</span><br><span class="line">Gateway=10.10.15.1</span><br><span class="line">GatewayOnlink=true</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=10.10.13.0/24</span><br><span class="line">Gateway=10.10.15.1</span><br><span class="line">GatewayOnlink=true</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=10.10.14.0/24</span><br><span class="line">Gateway=10.10.15.1</span><br><span class="line">GatewayOnlink=true</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=10.10.15.0/24</span><br><span class="line">Gateway=10.10.15.1</span><br><span class="line">GatewayOnlink=true</span><br><span class="line"></span><br><span class="line">[Route]</span><br><span class="line">Destination=10.10.16.0/24</span><br><span class="line">Gateway=10.10.15.1</span><br><span class="line">GatewayOnlink=true</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><p>重启网络</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-networkd</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://sysin.org/tags/Linux/"/>
    
      <category term="Network" scheme="http://sysin.org/tags/Network/"/>
    
      <category term="Route" scheme="http://sysin.org/tags/Route/"/>
    
      <category term="Cisco" scheme="http://sysin.org/tags/Cisco/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 不能打开 kubernetes Dashboard 解决方法</title>
    <link href="http://sysin.org/article/Chrome_%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80_kubernetes_Dashboard_%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://sysin.org/article/Chrome_%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80_kubernetes_Dashboard_%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2019-08-15T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:09.571Z</updated>
    
    <content type="html"><![CDATA[<h2 id="步骤">步骤：</h2><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir key &amp;&amp; cd key</span><br><span class="line"><span class="meta">#</span>生成证书</span><br><span class="line">openssl genrsa -out dashboard.key 2048</span><br><span class="line">openssl req -new -out dashboard.csr -key dashboard.key -subj '/CN=kubernetes-dashboard-certs'</span><br><span class="line">openssl x509 -req -in dashboard.csr -signkey dashboard.key -out dashboard.crt</span><br><span class="line"><span class="meta">#</span>删除原有的证书secret</span><br><span class="line">kubectl delete secret kubernetes-dashboard-certs -n kube-system</span><br><span class="line"><span class="meta">#</span>创建新的证书secret</span><br><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=dashboard.key --from-file=dashboard.crt -n kube-system</span><br><span class="line"><span class="meta">#</span>查看dashboard pod，v2.0是 -n kubernetes-dashboard</span><br><span class="line">kubectl get pod -n kube-system</span><br><span class="line"><span class="meta">#</span>重启dashboard pod，v2.0是 -n kubernetes-dashboard</span><br><span class="line">kubectl delete pod &lt;pod name&gt; -n kube-system</span><br></pre></td></tr></table></figure></p><h2 id="在部署-dashboard-时手动创建证书">在部署 Dashboard 时手动创建证书</h2><ul><li><p>修改配置文件</p><p><code>vi dashboard.yaml</code></p></li></ul><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#因为自动生成的证书很多浏览器无法使用，所以我们自己创建，注释掉kubernetes-dashboard-certs对象声明</span></span><br><span class="line"><span class="comment">#apiVersion: v1</span></span><br><span class="line"><span class="comment">#kind: Secret</span></span><br><span class="line"><span class="comment">#metadata:</span></span><br><span class="line"><span class="comment">#  labels:</span></span><br><span class="line"><span class="comment">#    k8s-app: kubernetes-dashboard</span></span><br><span class="line"><span class="comment">#  name: kubernetes-dashboard-certs</span></span><br><span class="line"><span class="comment">#  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="comment">#type: Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><ul><li>创建证书</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mkdir dashboard-certs</span><br><span class="line"></span><br><span class="line">cd dashboard-certs/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>创建命名空间</span><br><span class="line">kubectl create namespace kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建key文件</span><br><span class="line">openssl genrsa -out dashboard.key 2048</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>证书请求，CN=可修改为实际IP或者域名</span><br><span class="line">openssl req -days 36000 -new -out dashboard.csr -key dashboard.key -subj '/CN=kubernetes-dashboard-certs'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>自签证书</span><br><span class="line">openssl x509 -req -in dashboard.csr -signkey dashboard.key -out dashboard.crt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>创建kubernetes-dashboard-certs对象</span><br><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=dashboard.key --from-file=dashboard.crt -n kubernetes-dashboard</span><br></pre></td></tr></table></figure></p><blockquote><p>备注：dashboard v2.0 namespace 是 kubernetes-dashboard</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;步骤&quot;&gt;步骤：&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
    
      <category term="Kubernetes" scheme="http://sysin.org/tags/Kubernetes/"/>
    
      <category term="SSL" scheme="http://sysin.org/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes v1.18 编译 kubeadmin 修改证书有效期到 100 年</title>
    <link href="http://sysin.org/article/Kubernetes_v1.18_%E7%BC%96%E8%AF%91_kubeadmin_%E4%BF%AE%E6%94%B9%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F%E5%88%B0_100_%E5%B9%B4/"/>
    <id>http://sysin.org/article/Kubernetes_v1.18_%E7%BC%96%E8%AF%91_kubeadmin_%E4%BF%AE%E6%94%B9%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F%E5%88%B0_100_%E5%B9%B4/</id>
    <published>2019-08-15T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:23.133Z</updated>
    
    <content type="html"><![CDATA[<p><strong>kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：x509: certificate has expired or is not yet valid.</strong></p><p>Google 建议通过不停更新版本来自动更新证书，太坑^_^</p><p><strong>可以在初始化群集之前重新编译kubeadm，证书有效期自动为100年</strong></p><h2 id="1-获取源码">1. 获取源码</h2><p>访问：https://github.com/kubernetes/kubernetes/releases，下载特定版本源码</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/kubernetes/kubernetes/archive/v1.18.0.tar.gz</span><br><span class="line">tar -zxvf v1.18.0.tar.gz</span><br><span class="line">mv kubernetes-1.18.0 kubernetes</span><br><span class="line">cd kubernetes</span><br></pre></td></tr></table></figure></p><p>或者使用 git 获取</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># yum install git</span><br><span class="line">git clone https://github.com/kubernetes/kubernetes.git</span><br><span class="line">cd kubernetes</span><br><span class="line">git checkout -b remotes/origin/release-1.18 v1.18.0</span><br></pre></td></tr></table></figure></p><h2 id="2-修改证书有效期">2. 修改证书有效期</h2><p>查看网上的资料主要有两个地方需要修改</p><h3 id="修改-ca-有效期为-100-年默认为-10-年">修改 CA 有效期为 100 年（默认为 10 年）</h3><p>vim ./staging/src/k8s.io/client-go/util/cert/cert.go</p><p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个方法里面NotAfter:              now.Add(duration365d * 10).UTC()</span></span><br><span class="line"><span class="comment">// 默认有效期就是10年，改成100年</span></span><br><span class="line"><span class="comment">// 按/NotAfter查找</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewSelfSignedCACert</span><span class="params">(cfg Config, key crypto.Signer)</span> <span class="params">(*x509.Certificate, error)</span></span> &#123;</span><br><span class="line">        now := time.Now()</span><br><span class="line">        tmpl := x509.Certificate&#123;</span><br><span class="line">                SerialNumber: <span class="built_in">new</span>(big.Int).SetInt64(<span class="number">0</span>),</span><br><span class="line">                Subject: pkix.Name&#123;</span><br><span class="line">                        CommonName:   cfg.CommonName,</span><br><span class="line">                        Organization: cfg.Organization,</span><br><span class="line">                &#125;,</span><br><span class="line">                NotBefore:             now.UTC(),</span><br><span class="line">                <span class="comment">// NotAfter:              now.Add(duration365d * 10).UTC(),</span></span><br><span class="line">                NotAfter:              now.Add(duration365d * <span class="number">100</span>).UTC(),</span><br><span class="line">                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,</span><br><span class="line">                BasicConstraintsValid: <span class="literal">true</span>,</span><br><span class="line">                IsCA:                  <span class="literal">true</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        certDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &amp;tmpl, &amp;tmpl, key.Public(), key)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x509.ParseCertificate(certDERBytes)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="修改证书有效期为-100-年默认为-1-年">修改证书有效期为 100 年（默认为 1 年）</h3><p>vim ./cmd/kubeadm/app/constants/constants.go</p><p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 就是这个常量定义CertificateValidity，改成*100年</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">        <span class="comment">// KubernetesDir is the directory Kubernetes owns for storing various configuration files</span></span><br><span class="line">        KubernetesDir = <span class="string">"/etc/kubernetes"</span></span><br><span class="line">        <span class="comment">// ManifestsSubDirName defines directory name to store manifests</span></span><br><span class="line">        ManifestsSubDirName = <span class="string">"manifests"</span></span><br><span class="line">        <span class="comment">// TempDirForKubeadm defines temporary directory for kubeadm</span></span><br><span class="line">        <span class="comment">// should be joined with KubernetesDir.</span></span><br><span class="line">        TempDirForKubeadm = <span class="string">"tmp"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CertificateValidity defines the validity for all the signed certificates generated by kubeadm</span></span><br><span class="line">        <span class="comment">// CertificateValidity = time.Hour * 24 * 365</span></span><br><span class="line">        CertificateValidity = time.Hour * <span class="number">24</span> * <span class="number">365</span> * <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CACertAndKeyBaseName defines certificate authority base name</span></span><br><span class="line">        CACertAndKeyBaseName = <span class="string">"ca"</span></span><br><span class="line">        <span class="comment">// CACertName defines certificate name</span></span><br><span class="line">        CACertName = <span class="string">"ca.crt"</span></span><br><span class="line">        <span class="comment">// CAKeyName defines certificate name</span></span><br><span class="line">        CAKeyName = <span class="string">"ca.key"</span></span><br></pre></td></tr></table></figure></p><p>git验证，修改的内容如下：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br><span class="line"></span><br><span class="line">diff --git a/cmd/kubeadm/app/constants/constants.go b/cmd/kubeadm/app/constants/constants.go</span><br><span class="line">index 75adf43..54f25fa 100644</span><br><span class="line">--- a/cmd/kubeadm/app/constants/constants.go</span><br><span class="line">+++ b/cmd/kubeadm/app/constants/constants.go</span><br><span class="line">@@ -44,7 +44,7 @@ const (</span><br><span class="line">        TempDirForKubeadm = &quot;tmp&quot;</span><br><span class="line"></span><br><span class="line">        // CertificateValidity defines the validity for all the signed certificates generated by kubeadm</span><br><span class="line">-       CertificateValidity = time.Hour * 24 * 365</span><br><span class="line">+       CertificateValidity = time.Hour * 24 * 365 * 100</span><br><span class="line"></span><br><span class="line">        // CACertAndKeyBaseName defines certificate authority base name</span><br><span class="line">        CACertAndKeyBaseName = &quot;ca&quot;</span><br><span class="line">diff --git a/staging/src/k8s.io/client-go/util/cert/cert.go b/staging/src/k8s.io/client-go/util/cert/cert.go</span><br><span class="line">index 9fd097a..865d6bb 100644</span><br><span class="line">--- a/staging/src/k8s.io/client-go/util/cert/cert.go</span><br><span class="line">+++ b/staging/src/k8s.io/client-go/util/cert/cert.go</span><br><span class="line">@@ -63,7 +63,7 @@ func NewSelfSignedCACert(cfg Config, key crypto.Signer) (*x509.Certificate, erro</span><br><span class="line">                        Organization: cfg.Organization,</span><br><span class="line">                &#125;,</span><br><span class="line">                NotBefore:             now.UTC(),</span><br><span class="line">-               NotAfter:              now.Add(duration365d * 10).UTC(),</span><br><span class="line">+               NotAfter:              now.Add(duration365d * 100).UTC(),</span><br><span class="line">                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,</span><br><span class="line">                BasicConstraintsValid: true,</span><br><span class="line">                IsCA:                  true,</span><br></pre></td></tr></table></figure></p><p>源代码改好了，接下来就是编译kubeadm了</p><h2 id="3-编译">3. 编译</h2><h3 id="31-docker镜像编译推荐">3.1 Docker镜像编译（推荐）</h3><ul><li>查看 kube-cross 的 TAG 版本号</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cat ./build/build-image/cross/VERSION</span><br><span class="line"></span><br><span class="line">v1.13.8-1</span><br></pre></td></tr></table></figure></p><p>这里我们可以使用官方容器对代码进行编译：k8s.gcr.io/kube-cross:v1.13.6-1（当前只有1.13.6而不是1.13.8，未知）</p><ul><li>拉取镜像</li></ul><p>无法翻墙可以用下面的替代镜像：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull gcrcontainer/kube-cross:v1.13.6-1</span><br></pre></td></tr></table></figure></p><p>或者：'docker pull registry.aliyuncs.com/google_containers/kube-cross:v1.13.6-1'</p><ul><li>编译</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> docker run --rm -v &lt;你修改后的代码目录&gt;:/go/src/k8s.io/kubernetes -it gcrcontainer/kube-cross bash</span><br><span class="line">docker run --rm -v /root/kubernetes:/go/src/k8s.io/kubernetes -it gcrcontainer/kube-cross:v1.13.6-1 bash</span><br><span class="line"></span><br><span class="line">cd /go/src/k8s.io/kubernetes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编译kubeadm, 这里主要编译kubeadm 即可</span><br><span class="line">make all WHAT=cmd/kubeadm GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编译kubelet</span><br><span class="line"><span class="meta">#</span> make all WHAT=cmd/kubelet GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编译kubectl</span><br><span class="line"><span class="meta">#</span> make all WHAT=cmd/kubectl GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 退出容器</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编译完产物在 _output/bin/kubeadm 目录下，</span><br><span class="line"><span class="meta">#</span>其中bin是使用了软连接</span><br><span class="line"><span class="meta">#</span>真实路径是_output/local/bin/linux/amd64/kubeadm</span><br><span class="line">mv /usr/bin/kubeadm /usr/bin/kubeadm_backup</span><br><span class="line">cp _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm</span><br><span class="line"><span class="meta">#</span>chmod +x /usr/bin/kubeadm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 验证版本</span><br><span class="line">kubeadm version</span><br></pre></td></tr></table></figure></p><h3 id="32-本机编">3.2 本机编</h3><p>环境需求参看<a href="https://github.com/kubernetes/community/blob/master/contributors/devel/development.md" target="_blank" rel="noopener">官方文档</a>。</p><h4 id="321-软件包准备">3.2.1 软件包准备</h4><p>CentOS：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc make -y</span><br><span class="line">yum install rsync jq -y</span><br></pre></td></tr></table></figure></p><p>Ubuntu：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential #(Following command will install essential commands like gcc, make etc.)</span><br><span class="line">sudo apt install rsync jq -y</span><br></pre></td></tr></table></figure></p><h4 id="322-golang-环境">3.2.2 GoLang 环境</h4><p>查看 kube-cross 的 TAG 版本号</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cat ./build/build-image/cross/VERSION</span><br><span class="line"></span><br><span class="line">v1.13.8-1</span><br></pre></td></tr></table></figure></p><ul><li>安装Go环境：</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.13.8.linux-amd64.tar.gz</span><br><span class="line">tar zxvf go1.13.8.linux-amd64.tar.gz  -C /usr/local</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编辑/etc/profile文件添加如下：</span><br><span class="line"><span class="meta">#</span>go setting</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/usr/local/gopath</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>生效</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><ul><li>验证：</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br><span class="line">go version go1.13.8 linux/amd64</span><br></pre></td></tr></table></figure></p><ul><li>编译：</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 编译kubeadm, 这里主要编译kubeadm 即可</span><br><span class="line">make all WHAT=cmd/kubeadm GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编译kubelet</span><br><span class="line"><span class="meta">#</span> make all WHAT=cmd/kubelet GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 编译kubectl</span><br><span class="line"><span class="meta">#</span> make all WHAT=cmd/kubectl GOFLAGS=-v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编译完产物在 _output/bin/kubeadm 目录下，</span><br><span class="line"><span class="meta">#</span>其中bin是使用了软连接</span><br><span class="line"><span class="meta">#</span>真实路径是_output/local/bin/linux/amd64/kubeadm</span><br><span class="line">mv /usr/bin/kubeadm /usr/bin/kubeadm_backup</span><br><span class="line">cp _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm</span><br><span class="line">chmod +x /usr/bin/kubeadm</span><br></pre></td></tr></table></figure></p><h2 id="4-执行命令更新证书">4、执行命令更新证书</h2><p>可以先备份证书，证书在/etc/kubernetes/pki</p><ul><li>检查证书到期时间</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm alpha certs check-expiration</span><br></pre></td></tr></table></figure></p><ul><li>续订证书，查看可以使用的参数</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kubeadm alpha certs renew --help</span><br><span class="line">Available Commands:</span><br><span class="line">  admin.conf               Renew the certificate embedded in the kubeconfig file for the admin to use and for kubeadm itself</span><br><span class="line">  all                      Renew all available certificates</span><br><span class="line">  apiserver                Renew the certificate for serving the Kubernetes API</span><br><span class="line">  apiserver-etcd-client    Renew the certificate the apiserver uses to access etcd</span><br><span class="line">  apiserver-kubelet-client Renew the certificate for the API server to connect to kubelet</span><br><span class="line">  controller-manager.conf  Renew the certificate embedded in the kubeconfig file for the controller manager to use</span><br><span class="line">  etcd-healthcheck-client  Renew the certificate for liveness probes to healthcheck etcd</span><br><span class="line">  etcd-peer                Renew the certificate for etcd nodes to communicate with each other</span><br><span class="line">  etcd-server              Renew the certificate for serving etcd</span><br><span class="line">  front-proxy-client       Renew the certificate for the front proxy client</span><br><span class="line">  scheduler.conf           Renew the certificate embedded in the kubeconfig file for the scheduler manager to use</span><br></pre></td></tr></table></figure></p><ul><li>续订全部证书</li></ul><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm alpha certs renew all</span><br></pre></td></tr></table></figure></p><ul><li><p>再次查看证书有效期，全部都100年了</p><p>kubeadm alpha certs check-expiration</p></li></ul><p>参考文章：</p><p>https://blog.csdn.net/fuck487/article/details/102759523</p><p>https://www.cnblogs.com/skymyyang/p/11093686.html</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：x509: certificate has expired or is not yet valid.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Google 建议通过不停
      
    
    </summary>
    
    
    
      <category term="Kubernetes" scheme="http://sysin.org/tags/Kubernetes/"/>
    
      <category term="SSL" scheme="http://sysin.org/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 安装配置</title>
    <link href="http://sysin.org/article/Node.js-Installation/"/>
    <id>http://sysin.org/article/Node.js-Installation/</id>
    <published>2019-07-01T03:10:12.000Z</published>
    <updated>2020-08-03T05:33:41.997Z</updated>
    
    <content type="html"><![CDATA[<p>本章节我们将向大家介绍在 Windows、Linux 和 macOS 上安装 Node.js 的方法。</p><p>本安装教程以 Node.js v12.x.x LTS(长期支持版本)版本为例。</p><p>Node.js 安装包及源码下载地址为：https://nodejs.org/en/download/。</p><p>你可以根据不同平台系统选择你需要的 Node.js 安装包。</p><p>Node.js 历史版本下载地址：https://nodejs.org/dist/</p><p>**注意：**Linux 上安装 Node.js 需要安装 Python。</p><hr><h2 id="windows-上安装-nodejs">Windows 上安装 Node.js</h2><p>你可以采用以下两种方式来安装。</p><h3 id="1-windows-安装包msi">1、Windows 安装包(.msi)</h3><p>本文实例以 v12.0.0 版本为例，其他版本类似， 安装步骤：</p><p>步骤: 双击下载后的安装包 <strong>v12.0.0</strong> 点击直接 next 默认安装即可。</p><p>检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入&quot;cmd&quot; =&gt; 输入命令&quot;path&quot;，输出如下结果：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PATH=C:\Windows\system32;</span><br><span class="line">C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;</span><br><span class="line">C:\Program Files\nodejs\;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>我们可以看到环境变量中已经包含了C:\Program Files\nodejs\</p><p>检查Node.js版本</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure></p><h3 id="2-windows-二进制文件-exe安装">2、Windows 二进制文件 (.exe)安装</h3><p>32 位安装包下载地址 : https://nodejs.org/dist/v12.0.0/node-v12.0.0-win-x86.zip</p><p>64 位安装包下载地址 : https://nodejs.org/dist/v12.0.0/node-v12.0.0-win-x64.zip</p><p><strong>安装步骤</strong></p><p>步骤: 解压下载的安装包 Node.exe 点击 Run（运行）按钮将出现命令行窗口</p><h3 id="版本测试">版本测试</h3><p>进入 node.exe 所在的目录，如下所示：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd download</span><br><span class="line">node --version</span><br></pre></td></tr></table></figure></p><p>如果你获得以上输出结果，说明你已经成功安装了Node.js。</p><hr><h2 id="linux-上安装-nodejs">Linux 上安装 Node.js</h2><h3 id="直接使用已编译好的包">直接使用已编译好的包</h3><p>Node 官网已经把 linux 下载版本更改为已编译好的版本了，我们可以直接下载解压后使用：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">VERSION=<span class="number">12.0</span><span class="number">.0</span></span><br><span class="line">wget https:<span class="comment">//nodejs.org/dist/v$&#123;VERSION&#125;/node-v$&#123;VERSION&#125;-linux-x64.tar.xz    // 下载</span></span><br><span class="line">tar -xf node-v$&#123;VERSION&#125;-linux-x64.tar.xz -C /usr/local/      <span class="comment">// 解压</span></span><br><span class="line">ln -s /usr/local/node-v$&#123;VERSION&#125;-linux-x64/bin/node /usr/local/bin/</span><br><span class="line">ln -s /usr/local/node-v$&#123;VERSION&#125;-linux-x64/bin/npm /usr/local/bin/</span><br><span class="line">node -v                               <span class="comment">// 执行node命令 查看版本</span></span><br><span class="line">v12<span class="number">.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></p><h3 id="ubuntu-apt-get命令安装">Ubuntu apt-get命令安装</h3><p>命令格式如下：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure></p><h3 id="ubuntu-源码安装-nodejs">Ubuntu 源码安装 Node.js</h3><p>以下部分我们将介绍在 Ubuntu Linux 下使用源码安装 Node.js 。 其他的 Linux 系统，如 Centos 等类似如下安装步骤。</p><p>在 Github 上获取 Node.js 源码：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo git clone https://github.com/nodejs/node.git</span><br><span class="line">Cloning into &apos;node&apos;...</span><br></pre></td></tr></table></figure></p><p>修改目录权限：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod -R 755 node</span><br></pre></td></tr></table></figure></p><p>使用 <strong>./configure</strong> 创建编译文件，并按照：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd node</span><br><span class="line">$ sudo ./configure</span><br><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure></p><p>查看 node 版本：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">v12.0.0</span><br></pre></td></tr></table></figure></p><h3 id="centos-yumdnf命令安装">CentOS yum（dnf）命令安装</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nodejs npm -y</span><br><span class="line"># CentOS 8 or later</span><br><span class="line">dnf install nodejs npm -y</span><br></pre></td></tr></table></figure></p><h3 id="centos-下源码安装-nodejs">CentOS 下源码安装 Node.js</h3><p>1、下载源码，你需要在https://nodejs.org/en/download/下载最新的Nodejs版本，本文以v12.0.0为例:</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">wget http://nodejs.org/dist/v12.0.0/node-v12.0.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>2、解压源码</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf node-v12.0.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>3、 编译安装</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd node-v12.0.0</span><br><span class="line">./configure --prefix=/usr/local/node/12.0.0</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>4、 配置NODE_HOME，进入profile编辑环境变量</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>设置 nodejs 环境变量，在 <strong><em>export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</em></strong> 一行的上面添加如下内容:</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#set for nodejs</span><br><span class="line">export NODE_HOME=/usr/local/node/12.0.0</span><br><span class="line">export PATH=$NODE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p><p>:wq保存并退出，编译/etc/profile 使配置生效</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>验证是否安装配置成功</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></p><p>输出 v12.0.0 表示配置成功</p><p>npm模块安装路径</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/node/12.0.0/lib/node_modules/</span><br></pre></td></tr></table></figure></p><p>**注：**Nodejs 官网提供了编译好的 Linux 二进制包，你也可以下载下来直接应用。</p><hr><h2 id="mac-os-上安装-nodejs">Mac OS 上安装 Node.js</h2><p>你可以通过以下两种方式在 Mac OS 上来安装 node：</p><ul><li><p>1、在官方下载网站下载 pkg 安装包，直接点击安装即可。</p></li><li><p>2、使用 brew 命令来安装：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></p><p>brew 安装的是最新版，某些时候有不可预置的bug，使用<code>n</code>来管理node的版本。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm i -g n</span><br></pre></td></tr></table></figure></p><p>然后将node替换为稳定版：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure></p></li><li><p>3、使用已经编译好的二进制文件</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">VERSION=<span class="number">12.0</span><span class="number">.0</span></span><br><span class="line">wget https:<span class="comment">//nodejs.org/dist/v$&#123;VERSION&#125;/node-v$&#123;VERSION&#125;-darwin-x64.tar.xz    // 下载</span></span><br><span class="line">sudo tar -xf node-v$&#123;VERSION&#125;-darwin-x64.tar.xz -C /usr/local/      <span class="comment">// 解压</span></span><br><span class="line">ln -s /usr/local/node-v$&#123;VERSION&#125;-darwin-x64/bin/node /usr/local/bin/</span><br><span class="line">ln -s /usr/local/node-v$&#123;VERSION&#125;-darwin-x64/bin/npm /usr/local/bin/</span><br><span class="line">ln -s /usr/local/node-v$&#123;VERSION&#125;-darwin-x64/bin/npx /usr/local/bin/</span><br><span class="line">node -v                               <span class="comment">// 执行node命令 查看版本</span></span><br><span class="line">v12<span class="number">.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本章节我们将向大家介绍在 Windows、Linux 和 macOS 上安装 Node.js 的方法。&lt;/p&gt;
&lt;p&gt;本安装教程以 Node.js v12.x.x LTS(长期支持版本)版本为例。&lt;/p&gt;
&lt;p&gt;Node.js 安装包及源码下载地址为：https://nod
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://sysin.org/tags/Linux/"/>
    
      <category term="nodejs" scheme="http://sysin.org/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 添加静态路由的几种方法</title>
    <link href="http://sysin.org/article/CentOS-Static-Route/"/>
    <id>http://sysin.org/article/CentOS-Static-Route/</id>
    <published>2019-06-15T02:10:00.000Z</published>
    <updated>2020-08-03T05:32:03.447Z</updated>
    
    <content type="html"><![CDATA[<p>在日常使用中，服务器有两个IP地址，两块网卡的配置，访问不同网段，这种情况很常见。但我们需要创建额外的路由条目，以确定通过正确的网关转发数据包，使interface能够正常通信。</p><p>以下在CentOS 7、8测试通过</p><h2 id="一-使用route命令加入临时路由重启后将失效">一、使用route命令加入临时路由，重启后将失效</h2><p>route 命令参数：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add     增加路由</span><br><span class="line">del     删除路由</span><br><span class="line">-net    设置到某个网段的路由</span><br><span class="line">-host   设置到某台主机的路由</span><br><span class="line">gw      出口网关 IP地址</span><br><span class="line">dev     出口网关 物理设备名</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 加入到主机的路由</span><br><span class="line">route add -host 192.168.1.123 dev eth0</span><br><span class="line">route add -host 192.168.1.123 gw 192.168.1.1</span><br><span class="line"></span><br><span class="line"># 加入到网络的路由</span><br><span class="line">route add -net 192.168.1.123 netmask 255.255.255.0 eth0</span><br><span class="line">route add -net 192.168.1.123 netmask 255.255.255.0 gw 192.168.1.1</span><br><span class="line">route add -net 192.168.1.123 netmask 255.255.255.0 gw 192.168.1.1 eth1</span><br><span class="line">route add -net 192.168.1.0/24 eth1</span><br><span class="line"></span><br><span class="line"># 加入默认网关</span><br><span class="line">route add default gw 192.168.1.1</span><br><span class="line"></span><br><span class="line"># 删除路由</span><br><span class="line">route del -host 192.168.1.11 dev eth0</span><br><span class="line">route del -net 192.168.1.123 netmask 255.255.255.0</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 查看路由信息</span><br><span class="line">ip route</span><br><span class="line">route -n</span><br></pre></td></tr></table></figure></p><h2 id="二-在linux中添加永久路由的方法">二、在Linux中添加永久路由的方法</h2><h3 id="1-默认网关">1. 默认网关</h3><p>（1）写入ifcfg文件（推荐）</p><p>vi /etc/sysconfig/network-scripts/ifcfg-eth0</p><p>在配置ip地址的时候直接将GATEWAY的配置写入ifcfg文件。形式：GATEWAY=gw-ip</p><p>适合加入默认路由</p><p>（2）在/etc/sysconfig/network里加入到文件末尾，格式例如以下：</p><p>GATEWAY=gw-ip 或者 GATEWAY=gw-dev</p><h3 id="2-写入etcrcloacl不推荐">2. 写入/etc/rc.loacl（不推荐）</h3><p>（注意：CentOS 7必须执行“chmod +x /etc/rc.d/rc.local”来确保确保这个脚本在引导时执行。）</p><p>能够将上面提到的命令写入/etc/rc.local文件里，这样在系统启动的时候会自己主动增加相关的路由设置。</p><p>只是这样的方法有一个缺点：假设某个系统服务，比方说是NFS服务，这个服务是在启动network服务之后，在运行rc.local之前，假设你设置的有自己主动挂载的nfs。那么，这里链路的不通畅。会造成挂载的失败。另外一个就是假设你重新启动了网络server，那么路由就失效了，这个时候你不得不又一次载入这个文件，可是假设你是远程操作的呢？所以，这种方法不推荐。</p><p>方法：</p><p>编辑/etc/rc.local，使用route命令语法添加</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.3.0/24 dev eth0</span><br><span class="line">route add -net 192.168.2.0/24 gw 192.168.3.254</span><br><span class="line">route add -net 172.16.0.0 netmask 255.255.0.0 gw 192.168.1.100 dev eth0</span><br></pre></td></tr></table></figure></p><p>修改过的文件：/etc/rc.d/rc.local 文件示例</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> This script will be executed *after* all the other init scripts.</span><br><span class="line"><span class="meta">#</span> You can put your own initialization stuff in here if you don't</span><br><span class="line"><span class="meta">#</span> want to do the full Sys V style init stuff.</span><br><span class="line">touch /var/lock/subsys/local</span><br><span class="line">route add -net 192.168.3.0/24 dev eth0</span><br><span class="line">route add -net 192.168.2.0/24 gw 192.168.3.254</span><br><span class="line">route add -net 172.16.0.0 netmask 255.255.0.0 gw 192.168.1.100 dev eth0</span><br></pre></td></tr></table></figure></p><h3 id="3-写入etcsysconfigstatic-routes文件">3. 写入/etc/sysconfig/static-routes文件</h3><p>默认在/etc/sysconifg文件夹中是没有这个文件的，须要我们手工创建。对这个文件的调用在以下：</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/init.d/network</span><br><span class="line"></span><br><span class="line">    # Add non interface-specific static-routes.</span><br><span class="line">    if [ -f /etc/sysconfig/static-routes ]; then</span><br><span class="line">        if [ -x /sbin/route ]; then</span><br><span class="line">            grep "^any" /etc/sysconfig/static-routes | while read ignore args ; do</span><br><span class="line">                /sbin/route add -$args</span><br><span class="line">            done</span><br><span class="line">        else</span><br><span class="line">            net_log $"Legacy static-route support not available: /sbin/route not found"</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br></pre></td></tr></table></figure></p><p>添加操作如下：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/static-routes</span><br><span class="line">any net 192.168.1.0/24 gw 192.168.1.1</span><br><span class="line">any net 192.168.2.0 netmask 255.255.255.0 gw 192.168.2.1</span><br><span class="line">any host 10.19.190.11/32 gw 10.19.177.10</span><br><span class="line">any host 10.19.190.12 gw 10.19.177.10</span><br></pre></td></tr></table></figure></p><p>这样的方式的话，和rc.local相比，比较有用。还比方nfs，这个路由的生效时间是在网络服务network启动的时候生效的，而其它的一些网络相关服务都是在网络服务启动成功之后再启动的，所以可以保证网络链路的通畅。并且，假设我重新启动了网络服务，这个脚本是在网络服务启动里面的脚本调用。因此，也增加了自己主动上设置的相关路线。</p><blockquote><p>该方式在CentOS 8默认安装时无效。</p><p>在CentOS 8中默认使用nmcli管理网络，可以通过 <code>yum install network-scripts</code> 来安装传统的 network.service，恢复用这种方式配置静态路由。</p></blockquote><h3 id="4-创建etcsysconfignetwork-scriptsroute-eth0推荐">4. 创建/etc/sysconfig/network-scripts/route-eth0（推荐）</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 在/etc/sysconfig/network-scripts/目录下创建名为route-eth0的文件</span><br><span class="line">vi /etc/sysconfig/network-scripts/route-eth0</span><br><span class="line"><span class="meta">#</span> 在此文件添加如下格式的内容</span><br><span class="line">192.168.1.0/24 via 192.168.0.1</span><br><span class="line"><span class="meta">#</span> 重启网络验证有效</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在日常使用中，服务器有两个IP地址，两块网卡的配置，访问不同网段，这种情况很常见。但我们需要创建额外的路由条目，以确定通过正确的网关转发数据包，使interface能够正常通信。&lt;/p&gt;
&lt;p&gt;以下在CentOS 7、8测试通过&lt;/p&gt;
&lt;h2 id=&quot;一-使用route命
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://sysin.org/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://sysin.org/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 8.0 安装笔记</title>
    <link href="http://sysin.org/article/CentOS-8.0-Install/"/>
    <id>http://sysin.org/article/CentOS-8.0-Install/</id>
    <published>2019-06-01T02:10:00.000Z</published>
    <updated>2020-08-03T07:11:47.592Z</updated>
    
    <content type="html"><![CDATA[<p>初始版本：CentOS 8.0.1905</p><p>继 RHEL 8 发布之后，CentOS 社区也发布了让人期待已久的 CentOS 8，并发布了两种模式：</p><ul><li>CentOS stream：滚动发布的 Linux 发行版，适用于需要频繁更新的开发者</li><li>CentOS：类似 RHEL 8 的稳定操作系统，系统管理员可以用其部署或配置服务和应用</li></ul><p>CentOS 8 系列只有64位系统，没有32位。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CentOS-8-x86_64-1905-boot.iso                      16-Aug-2019 05:22    534M</span><br><span class="line">CentOS-8-x86_64-1905-boot.iso.manifest             16-Aug-2019 05:23     626</span><br><span class="line">CentOS-8-x86_64-1905-boot.torrent                  24-Sep-2019 04:51     21K</span><br><span class="line">CentOS-8-x86_64-1905-dvd1.iso                      16-Aug-2019 05:59      7G</span><br><span class="line">CentOS-8-x86_64-1905-dvd1.iso.manifest             16-Aug-2019 05:59    401K</span><br><span class="line">CentOS-8-x86_64-1905-dvd1.torrent                  24-Sep-2019 04:52    266K</span><br></pre></td></tr></table></figure></p><p>这里使用 CentOS-8-x86_64-1905-boot.iso 进行安装，由于没有提供类似于 CentOS7 的 Minimal 版本，安装过程中选择 Minimal 安装，不过需要指定 repo 地址。</p><p>更新：CentOS 8.2.2004 终于增加了 minimal iso。</p><h2 id="centos-8-的新特性">CentOS 8 的新特性</h2><ul><li><p>DNF 成为了默认的软件包管理器，同时 yum 仍然是可用的</p></li><li><p>使用网络管理器（<code>nmcli</code> 和 <code>nmtui</code>）进行网络配置，移除了网络脚本</p></li><li><p>使用 Podman 进行容器管理</p></li><li><p>引入了两个新的包仓库：BaseOS 和 AppStream</p></li><li><p>使用 Cockpit 作为默认的系统管理工具</p></li><li><p>默认使用 Wayland 作为显示服务器</p></li><li><p><code>iptables</code> 将被 <code>nftables</code> 取代</p></li><li><p>使用 Linux 内核 4.18</p></li><li><p>动态编程语言、Web 和数据库服务器</p><ul><li><code>Python 3.6</code>  是默认的 Python 环境，有限支持 Python 2.7</li><li><code>Node.js</code>  是在 RHEL 最新包含的，其他动态语言更新包括: <code>PHP 7.2</code> , <code>Ruby 2.5</code> , <code>Perl 5.26</code> , <code>SWIG 3.0</code></li><li>RHEL 8 提供的数据库服务包括：<code>MariaDB 10.3</code> , <code>MySQL 8.0</code> , <code>PostgreSQL 10</code> , <code>PostgreSQL 9.6</code> , 和 <code>Redis 5</code></li><li>RHEL 8 提供<code>Apache HTTP Server 2.4</code>  以及首次引入的, <code>nginx 1.14</code></li><li><code>Squid</code>  版本升级到 4.4 ，同时也首次提供<code>Varnish Cache 6.0</code></li></ul></li></ul><h2 id="安装要点">安装要点</h2><p>具体参看 CentOS 8 安装截图，这里列出几个注意点</p><ol><li><p>先配置网络，否则 NTP 无法配置，boot.iso 版本需要指定安装源也需要 Internet 访问</p></li><li><p>指定安装源，这里可以使用 163 或者阿里云镜像</p><p>https://mirrors.aliyun.com/CentOS/8/BaseOS/x86_64/os/</p><p>https://mirrors.163.com/CentOS/8/BaseOS/x86_64/os/</p></li></ol><h2 id="系统配置">系统配置</h2><h3 id="1-格式化网卡命名">1. 格式化网卡命名</h3><p>即禁用 consistent interface device naming</p><p><strong>要点：与 CentOS 7 配置上略有不同</strong></p><ul><li>CentOS 7：net.ifnames=0 biosdevname=0</li><li>CentOS 8：net.ifnames=0</li></ul><p>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens160  #注意这里的名称根据硬件有所变动，这里是vm环境，默认ens160，如果你希望继续使用 eth0 这样的传统名称，那么在安装启动时加上参数：net.ifnames=0</p><p>从 CentOS 7 开始，这种变化的原因，是由于systemd 和 udev 引入了一种新的网络设备命名方式 – 一致网络设备命名（CONSISTENT NETWORK DEVICE NAMING）。可以根据固件、拓扑、位置信息来设置固定名字，带来的好处是命名自动化，名字完全可预测，在硬件坏了以后更换也不会影响设备的命名，这样可以让硬件的更换无缝化。带来的不利是新的设备名称比传统的名称难以阅读。比如新的名称是enp5s0.</p><p>1.1 编辑 grub 配置文件</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>如果系统已经安装，希望改成eth0这样的名称，那么需要：</span><br><span class="line"><span class="meta">#</span>修改grub2启动参数</span><br><span class="line">vi /etc/sysconfig/grub</span><br><span class="line"><span class="meta">#</span>增加内容：net.ifnames=0</span><br><span class="line">原内容：</span><br><span class="line">GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root rd.lvm.lv=cl/swap rhgb quiet"</span><br><span class="line">修改后(位置并没有严格要求)：</span><br><span class="line">GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root rd.lvm.lv=cl/swap net.ifnames=0 rhgb quiet"</span><br><span class="line"><span class="meta">#</span>保存</span><br><span class="line">:x</span><br></pre></td></tr></table></figure></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>直接用sed命令替换，经过测试sed修改不生效，未知</span><br><span class="line">sed -i '/^GRUB_CMDLINE_LINUX=.*/c GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root rd.lvm.lv=cl/swap net.ifnames=0 rhgb quiet"' /etc/sysconfig/grub</span><br></pre></td></tr></table></figure></p><p>1.2 运行如下命令重建 grub.cfg 文件</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure></p><p>1.3 重命名网卡配置文件</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>重新对文件进行命名：</span><br><span class="line">cd /etc/sysconfig/network-scripts/</span><br><span class="line">mv ifcfg-ens160 ifcfg-eth0</span><br><span class="line">vi ifcfg-eth0</span><br><span class="line">编辑NAME=eth0</span><br><span class="line">编辑DEVICE=eth0</span><br><span class="line">注释HWADDR，如果有</span><br></pre></td></tr></table></figure></p><p>1.4 重启生效</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></p><p>参考<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consistent-network-interface-device-naming_configuring-and-managing-networking" target="_blank" rel="noopener">官方文档</a></p><h3 id="2-配置网络">2. 配置网络</h3><h4 id="21-方法一手工配置-ifcfg使用-nmcli-来生效新的网络配置">2.1 方法一：手工配置 ifcfg，使用 nmcli 来生效新的网络配置</h4><p>安装过程中最好配置好网络，如果需要编辑网络，修改配置文件如下：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="meta"># vi /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none  <span class="comment">//static，使用静态IP配置（CentOS8这里是none也是静态）</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=eth0</span><br><span class="line">UUID=<span class="number">34f</span>808f1<span class="number">-1232</span><span class="number">-4900</span><span class="number">-83</span>db<span class="number">-82</span>d32533f776</span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes  <span class="comment">//开机自动启用网络连接</span></span><br><span class="line">IPADDR=<span class="number">10.3</span><span class="number">.5</span><span class="number">.5</span>  <span class="comment">//IP地址</span></span><br><span class="line">PREFIX=<span class="number">24</span>  <span class="comment">//掩码</span></span><br><span class="line">GATEWAY=<span class="number">10.3</span><span class="number">.5</span><span class="number">.1</span>  <span class="comment">//默认网关</span></span><br><span class="line">DNS1=<span class="number">10.3</span><span class="number">.5</span><span class="number">.11</span>  <span class="comment">//DNS服务器</span></span><br><span class="line">DNS2=<span class="number">10.3</span><span class="number">.5</span><span class="number">.12</span>  <span class="comment">//备用NDS服务器</span></span><br><span class="line">DOMAIN=sysin.org  <span class="comment">//域名</span></span><br><span class="line">IPV6_PRIVACY=no</span><br></pre></td></tr></table></figure></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nmcli c reload    #重新加载网络配置</span><br><span class="line"></span><br><span class="line">ping www.baidu.com  #测试网络是否正常</span><br><span class="line"></span><br><span class="line">ip addr  #查看IP地址</span><br></pre></td></tr></table></figure></p><p>重启网络</p><blockquote><p>比如配置了静态路由，使用nmcli c reload无法生效，需要重启网络</p></blockquote><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart NetworkManager.service</span><br><span class="line">nmcli networking off &amp;&amp; nmcli networking on</span><br></pre></td></tr></table></figure></p><p><strong><a href="https://www.cnblogs.com/yunweiweb/p/11588420.html" target="_blank" rel="noopener">CentOS 8 网卡命令(CentOS 7 也可用)</a></strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nmcli n #查看nmcli状态</span><br><span class="line">nmcli n on #启动nmcli</span><br><span class="line">nmcli c up eth0 #启动网卡eth0</span><br><span class="line">nmcli c down eth0 #关闭网卡eth0</span><br><span class="line">nmcli d c eth0 #激活网卡</span><br><span class="line">nmcli d show eth0 #查看网卡eth0信息</span><br><span class="line">nmcli r all off #关闭无线</span><br></pre></td></tr></table></figure></p><h4 id="22-方法二rhel8-和-centos8-完全使用-nmcli-来管理网络">2.2 方法二：RHEL8 和 CentOS8 完全使用 nmcli 来管理网络</h4><p><strong>nmcli 命令帮助</strong></p><p>命令不支持自动补全，但是可以通过-h参数逐步获得帮助</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span># 说明nmcli后面的命令关键字都可以用第一个字母简写来标识，例如：</span><br><span class="line"><span class="meta">#</span># nmcli connection = nmcli c</span><br><span class="line"><span class="meta">#</span># nmcli connection show --active = nmcli c s --a</span><br><span class="line">nmcli -h</span><br><span class="line">nmcli connection -h</span><br><span class="line">nmcli connection add -h</span><br><span class="line">nmcli connection modify -h</span><br></pre></td></tr></table></figure></p><p><strong>创建一个完整的配置文件</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">IFACE=`nmcli dev|grep ethernet|awk '&#123;print $1&#125;'`</span><br><span class="line">nmcli con delete $IFACE</span><br><span class="line"><span class="meta">#</span>下面将使用传统的eth0命名方式，前提是已经做了下面格式化网卡名称的配置</span><br><span class="line">nmcli con add con-name eth0 ifname eth0 type ethernet autoconnect yes</span><br><span class="line"></span><br><span class="line">nmcli connection modify eth0 ipv4.method manual \</span><br><span class="line">ipv4.addresses 10.3.5.5/24 \</span><br><span class="line">ipv4.dns "10.3.5.11, 10.3.5.12" \</span><br><span class="line">ipv4.gateway 10.3.5.1 \</span><br><span class="line">ipv4.dns-search sysin.org</span><br><span class="line"></span><br><span class="line">nmcli c up eth0</span><br><span class="line">nmcli c reload</span><br></pre></td></tr></table></figure></p><p>可以配置的参数选项：</p><p>ipv4.[method, dns, dns-search, dns-options, dns-priority, addresses, gateway, routes, route-metric, route-table, ignore-auto-routes, ignore-auto-dns, dhcp-client-id, dhcp-timeout, dhcp-send-hostname, dhcp-hostname, dhcp-fqdn, never-default, may-fail, dad-timeout]</p><p><strong>nmcli示例命令参考</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>查看网卡信息</span><br><span class="line">nmcli connection</span><br><span class="line">NAME    UUID                                  TYPE      DEVICE</span><br><span class="line">eth0    db05ccae-3a48-4300-b3a6-7c56429c4f54  ethernet  eth0</span><br><span class="line"><span class="meta">#</span>显示具体的网络接口信息</span><br><span class="line">nmcli connection show eth0</span><br><span class="line"><span class="meta">#</span>显示所有活动连接</span><br><span class="line">nmcli connection show --active</span><br><span class="line"><span class="meta">#</span>删除一个网卡连接</span><br><span class="line">nmcli connection delete eth0</span><br><span class="line"><span class="meta">#</span>创建一个网卡连接</span><br><span class="line">IFACE=`nmcli dev|grep ethernet|awk '&#123;print $1&#125;'`</span><br><span class="line">nmcli con delete $IFACE</span><br><span class="line">nmcli con add con-name "$IFACE" ifname "$IFACE" type ethernet autoconnect yes</span><br><span class="line"><span class="meta">#</span>给eth0添加一个IP和子网掩码（NETMASK）</span><br><span class="line">nmcli connection modify eth0 ipv4.addresses 10.3.5.5/24</span><br><span class="line"><span class="meta">#</span>给eth0添加两个IP地址和掩码</span><br><span class="line">nmcli connection modify eth0 ipv4.addresses "10.3.5.5/24, 10.3.5.6/24"</span><br><span class="line"><span class="meta">#</span>IP获取方式设置成手动（BOOTPROTO=static/none）</span><br><span class="line">nmcli connection modify eth0 ipv4.method manual</span><br><span class="line"><span class="meta">#</span>添加一个ipv4</span><br><span class="line">nmcli connection modify eth0 +ipv4.addresses 10.3.5.6/24</span><br><span class="line"><span class="meta">#</span>删除一个ipv4</span><br><span class="line">nmcli connection modify eth0 -ipv4.addresses 10.3.5.6/24</span><br><span class="line"><span class="meta">#</span>添加DNS</span><br><span class="line">nmcli connection modify eth0 ipv4.dns 10.3.5.11</span><br><span class="line"><span class="meta">#</span>同时添加两个DNS</span><br><span class="line">nmcli connection modify eth0 ipv4.dns "10.3.5.11, 10.3.5.12"</span><br><span class="line"><span class="meta">#</span>删除DNS</span><br><span class="line">nmcli connection modify eth0 -ipv4.dns 10.3.5.11</span><br><span class="line"><span class="meta">#</span>删除第一个DNS</span><br><span class="line">nmcli connection modify eth0 -ipv4.dns 1</span><br><span class="line"><span class="meta">#</span>添加一个网关（GATEWAY）</span><br><span class="line">nmcli connection modify eth0 ipv4.gateway 10.3.5.1</span><br><span class="line"><span class="meta">#</span>都可以同时写，例如：</span><br><span class="line">nmcli connection modify eth0 ipv4.dns 10.3.5.11 ipv4.gateway 10.3.5.1</span><br><span class="line"><span class="meta">#</span>域名dns-search，对应ifcfg中的DOMAIN</span><br><span class="line">nmcli connection modify eth0 ipv4.dns-search sysin.org</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>使用nmcli重新回载网络配置</span><br><span class="line">nmcli c reload</span><br><span class="line"><span class="meta">#</span>如果之前没有eth0的connection，则上一步reload后就已经自动生效了</span><br><span class="line">nmcli c up eth0</span><br></pre></td></tr></table></figure></p><h4 id="23-方法三手工配置-ifcfg安装-networkservice-服务">2.3 方法三：手工配置 ifcfg，安装 network.service 服务</h4><p>可以通过 <code>yum install network-scripts</code> 来安装传统的 network.service，不过 redhat 说了，在下一个RHEL的大版本里将彻底废除，因此不建议使用 network.service。</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install network-scripts</span><br><span class="line">service network restart   #重启网络服务</span><br><span class="line">systemctl restart network.service   #重启网络服务</span><br></pre></td></tr></table></figure></p><h3 id="3-修改主机名">3. 修改主机名</h3><p>说明：与 CentOS 7 方法相同</p><ul><li>即时生效</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname  www  #设置主机名为www</span><br></pre></td></tr></table></figure></p><ul><li>永久生效</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hostname #编辑配置文件</span><br><span class="line">www   #修改localhost.localdomain为www</span><br><span class="line">:x  #保存退出</span><br><span class="line"></span><br><span class="line">或者使用命令：hostnamectl set-hostname www</span><br><span class="line"></span><br><span class="line">同时修改hosts文件：</span><br><span class="line">vi /etc/hosts #编辑配置文件</span><br><span class="line">127.0.0.1   localhost  www   #修改localhost.localdomain为www</span><br><span class="line">:x  #保存退出</span><br></pre></td></tr></table></figure></p><p>通过命令快速修改示例</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname www</span><br><span class="line"><span class="meta">#</span>主机名这里是www，替换实际名称直接执行</span><br><span class="line">NICName=`ip add|egrep global|awk '&#123; print $NF &#125;'|head -n 1`</span><br><span class="line">IP=`ip add|grep global|awk -F'[ /]+' '&#123; print $3 &#125;'|head -n 1`</span><br><span class="line">Hostname=`hostname`</span><br><span class="line">HostnameAll=`hostname --fqdn` #注意这里不是引号``</span><br><span class="line">echo  "网卡名称:$NICName"</span><br><span class="line">echo  "IP地址:  $IP"</span><br><span class="line">echo  "主机名称:  $Hostname $HostnameAll"</span><br><span class="line"></span><br><span class="line">echo "$IP   $Hostname $HostnameAll"&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure></p><h3 id="4-激活-cockpit-web-console">4. 激活 cockpit web console</h3><p>CentOS 8 默认集成了 cockpit，登录画面提示激活方法（模板未启用）：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now cockpit.socket</span><br></pre></td></tr></table></figure></p><p>然后通过浏览器访问：http://&lt;IP&gt;:9090</p><p><strong>补充说明：</strong></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Cockpit（飞机驾驶舱）使用方法</span><br><span class="line">在 web 浏览器中查看服务器并使用鼠标执行系统任务。很容易管理存储、配置网络和检查日志等操作。</span><br><span class="line"></span><br><span class="line">1) RHEL 8 自动安装了 Cockpit，Cockpit 所需的防火墙端口会自动打开</span><br><span class="line">2) Cockpit 界面可用于将基于策略的解密（PBD）规则应用于受管系统上的磁盘</span><br><span class="line">3) 对于在身份管理（IdM）域中注册的系统，Cockpit 默认使用域的集中管理的 IdM 资源</span><br><span class="line">4) Cockpit 菜单和页面可以在移劢浏览器上导航</span><br><span class="line">5) 可以从 Cockpit Web 界面创建和管理虚拟机</span><br><span class="line">6) 现在可以将“虚拟机”页面添加到 Cockpit 界面，该界面使用户可以创建和管理基于 libvirt 的虚拟机</span><br><span class="line"></span><br><span class="line">安装 cockpit</span><br><span class="line">yum -y install cockpit</span><br><span class="line"></span><br><span class="line">启用 cockpit</span><br><span class="line">systemctl enable --now cockpit.socket</span><br><span class="line"></span><br><span class="line">设置开机自启动同时开启服务一条命令就可以搞定</span><br><span class="line"></span><br><span class="line">使用 Cockpit</span><br><span class="line">Cockpit 监听 9090 端口</span><br><span class="line">使用浏览器访问 http://&lt;IP&gt;:9090</span><br></pre></td></tr></table></figure></p><h3 id="5-关闭-selinux">5. 关闭 SELINUX</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line"><span class="meta">#</span> SELINUX=enforcing       #注释掉</span><br><span class="line"><span class="meta">#</span> SELINUXTYPE=targeted    #注释掉</span><br><span class="line">SELINUX=disabled         #增加</span><br><span class="line">:x  #保存，关闭</span><br><span class="line">setenforce 0 #使配置立即生效，或者重启系统</span><br><span class="line">shutdown -r now   #重启系统生效</span><br><span class="line"></span><br><span class="line">sestatus  #查看状态</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 直接使用sed命令修改</span><br><span class="line"><span class="meta">#</span> 修改ELINUX=enforcing为SELINUX=disabled，即替换行</span><br><span class="line">sed '/^SELINUX=.*/c SELINUX=disabled' /etc/selinux/config</span><br><span class="line"><span class="meta">#</span> 或者：sed -i '/^SELINUX=enforcing/c SELINUX=disabled' /etc/selinux/config</span><br><span class="line"><span class="meta">#</span> 注释SELINUXTYPE=targeted</span><br><span class="line">sed -i 's/^SELINUXTYPE=targeted/#&amp;/' /etc/selinux/config</span><br></pre></td></tr></table></figure></p><h3 id="6-配置firewalld">6. 配置firewalld</h3><p><strong>关闭 firewalld</strong>（模板配置）</p><p>CentOS 8 主要改动和 RedHat Enterprise Linux 8 是一致的，基于 Fedora 28 和内核版本 <code>4.18</code>，其中网络方面的主要改动是<strong>用 nftables 框架替代 iptables 框架作为默认的网络包过滤工具。</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service  #停止firewall</span><br><span class="line">systemctl disable firewalld.service  #禁止firewall开机启动</span><br><span class="line">firewall-cmd --state  #查看状态</span><br></pre></td></tr></table></figure></p><p><strong>firewalld 常用命令</strong>（nftables 使用nft 命令，参看其他文档）</p><p>CentOS 8 中 firewalld 已经与 iptables 解绑，后端改用 nftables，需要用 <code>nft</code> 或者 <code>firewall-cmd</code> 开放端口或者服务。</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>查看配置</span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line">firewall-cmd --list-services  #默认开放：ssh dhcpv6-client</span><br><span class="line">firewall-cmd --zone=public --list-services  #指定区域进行查看</span><br><span class="line">firewall-cmd --list-ports</span><br><span class="line">firewall-cmd --zone=public --list-ports  #指定区域进行查看</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>配置保存文件</span><br><span class="line">cat /etc/firewalld/zones/public.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>添加一个TCP端口(删除将add关键字修改为remove)</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent  #--permanent表示永久生效</span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent  #与上面是等价的，默认zone为pulic</span><br><span class="line">firewall-cmd --reload  #重新加载配置生效</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>关于zone</span><br><span class="line">firewall-cmd --get-zones  #查看所有zone的命令，CentOS 7 一共有9个zone</span><br><span class="line">block dmz drop external home internal public trusted work</span><br><span class="line">firewall-cmd --get-zones  ##CentOS 8 有10个zone</span><br><span class="line">block dmz drop external home internal libvirt public trusted work</span><br><span class="line">firewall-cmd --get-default-zone  #查看默认的zone的命令</span><br><span class="line">public</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>添加一个服务</span><br><span class="line">firewall-cmd --add-service=snmp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --get-services  #查看可用的服务</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>限定源地址访问</span><br><span class="line">firewall-cmd --add-rich-rule="rule family="ipv4" source address="192.168.1.0/24" port protocol="tcp" port="3306" accept" --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p><strong>添加几个常用的服务</strong></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=snmp --permanent</span><br><span class="line">firewall-cmd --add-service=http --permanent</span><br><span class="line">firewall-cmd --add-service=https --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p><strong>禁Ping</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule='rule protocol value=icmp drop'  #全部禁ping</span><br><span class="line">firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="192.168.1.0/24" protocol value="icmp" accept'  #指定192.168.1.0/24允许icmp</span><br></pre></td></tr></table></figure></p><h3 id="7-安装-epel-extra-packages-for-enterprise-linux">7. 安装 EPEL (Extra Packages for Enterprise Linux)</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line"></span><br><span class="line">或者 (EL8):</span><br><span class="line">rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm</span><br><span class="line">rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-8</span><br></pre></td></tr></table></figure></p><h3 id="8-安装一些必备工具">8. 安装一些必备工具</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 一些基本工具最小化安装可能没有(经测vim和wget没有安装)</span><br><span class="line">yum install vim wget zip unzip man gcc make -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以下网络工具已经不存在</span><br><span class="line"><span class="meta">#</span> yum install setuptool system-config-network-tui system-config-firewall-tui -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 默认安装没有ifconfig命令，安装net-tools：</span><br><span class="line"><span class="meta">#</span> ifconfig、netstat、route等命令集</span><br><span class="line">yum install net-tools -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 更好的top工具</span><br><span class="line">yum install htop -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> host、dig和nslookup</span><br><span class="line">yum install bind-utils -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 文件传输：sz和rz（样本未安装）</span><br><span class="line">yum install lrzsz -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看日志神器Log file Navigator</span><br><span class="line"><span class="meta">#</span> yum install lnav -y</span><br><span class="line"><span class="meta">#</span> EPEL中没有了，直接在线安装</span><br><span class="line">rpm -ivh https://github.com/tstack/lnav/releases/download/v0.8.5/lnav-0.8.5-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> NTP已经废弃，改用chrony</span><br><span class="line"><span class="meta">#</span> yum install ntp -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> nc:</span><br><span class="line">yum install nc -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> lsof:</span><br><span class="line">yum install lsof -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> tree:</span><br><span class="line">yum install tree -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> pstree:</span><br><span class="line">yum install psmisc -y</span><br></pre></td></tr></table></figure></p><p>fd 命令（fd-find，强烈推荐）</p><ul><li>下载（二选一）：</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> gcc 编译版本</span><br><span class="line">wget https://github.com/sharkdp/fd/releases/download/v8.0.0/fd-v8.0.0-x86_64-unknown-linux-gnu.tar.gz</span><br><span class="line"><span class="meta">#</span> musl libc 编译版本</span><br><span class="line">wget https://github.com/sharkdp/fd/releases/download/v8.0.0/fd-v8.0.0-x86_64-unknown-linux-musl.tar.gz</span><br></pre></td></tr></table></figure></p><ul><li>安装：</li></ul><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf fd-v8.0.0-x86_64-unknown-linux-*.tar.gz</span><br><span class="line">cd fd-v8.0.0-x86_64-unknown-linux-gnu</span><br><span class="line"></span><br><span class="line">cp ./fd /usr/local/bin/</span><br><span class="line">cp ./fd.1 /usr/local/share/man/man1/</span><br><span class="line">mandb</span><br></pre></td></tr></table></figure></p><p>rg 命令</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/BurntSushi/ripgrep/releases/download/12.0.0/ripgrep-12.0.0-x86_64-unknown-linux-musl.tar.gz</span><br><span class="line">tar xzvf ripgrep-12.0.0-x86_64-unknown-linux-musl.tar.gz</span><br><span class="line">cp ripgrep-12.0.0-x86_64-unknown-linux-musl/rg  /usr/local/bin/</span><br></pre></td></tr></table></figure></p><h3 id="9-配置-ntp">9. 配置 NTP</h3><p>在 CentOS 8.0 中默认不再支持 ntp 软件包，时间同步将由 chrony 来实现。</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/chrony.conf</span><br><span class="line"><span class="meta">#</span> These servers were defined in the installation:</span><br><span class="line">pool 2.centos.pool.ntp.org iburst</span><br><span class="line">pool 0.pool.ntp.org iburst</span><br><span class="line">pool ntp1.aliyun.com iburst</span><br><span class="line">pool ntp2.aliyun.com iburst</span><br></pre></td></tr></table></figure></p><h3 id="10-安装-snmp">10. 安装 SNMP</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install net-snmp net-snmp-devel net-snmp-libs net-snmp-utils -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 对比 CentOS 7 net-snmp-perl 已经不存在(未知)</span><br><span class="line"><span class="meta">#</span> 因为是模板，这里暂不配置</span><br></pre></td></tr></table></figure></p><h3 id="11-虚机安装-vm-tools">11. 虚机安装 VM-tools</h3><p>在系统安装时候勾选了“Guest Agent”，将自动安装open-vm-tools</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">手动安装open-vm-tools：</span><br><span class="line"><span class="meta">#</span> http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2073803</span><br><span class="line">yum install open-vm-tools -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 开启服务</span><br><span class="line">chkconfig vmtoolsd on</span><br><span class="line">systemctl enable vmtoolsd.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 启动服务</span><br><span class="line">service vmtoolsd start</span><br><span class="line">systemctl start vmtoolsd</span><br></pre></td></tr></table></figure></p><h3 id="12-用-yum-排除不需要的更新包">12. 用 yum 排除不需要的更新包</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">修改 yum 的配置文件</span><br><span class="line">vi /etc/yum.conf</span><br><span class="line">在 [main] 的最后添加 exclude=kernel*</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">[main]</span><br><span class="line">gpgcheck=1</span><br><span class="line">installonly_limit=3</span><br><span class="line">clean_requirements_on_remove=True</span><br><span class="line">best=True</span><br><span class="line">exclude=kernel*</span><br></pre></td></tr></table></figure></p><p>说明：通常在用 yum 进行更新时老是会更新内核，这样就造成了两个问题：1).内核过多，占用系统的空间2).如果是自行编译安装的 nvidia 显卡驱动的话，进入更新的核心时需要再重新安装显卡驱动</p><p>这里介绍好的办法解决这个问题，就是在更新时排除对内核的更新，方法有两个:1).修改yum的配置文件 vi /etc/yum.conf，在[main]的最后添加 exclude=kernel*2).直接在yum的命令行执行如下的命令： yum --exclude=kernel* update</p><p>以上的办法也适合你要求自行排除的其它更新软件包。</p><p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">备注：安装某些软件包需要新版内核支持，需要删除以上配置。</span><br></pre></td></tr></table></figure></p><h3 id="13-更换国内镜像-yum-源">13. 更换国内镜像 yum 源</h3><p>说明：与 CentOS 7 具体不太一样</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d</span><br><span class="line">ls -l</span><br><span class="line"><span class="meta">#</span>repo更多</span><br><span class="line">-rw-r--r--. 1 root root  731 Aug 14 14:42 CentOS-AppStream.repo</span><br><span class="line">-rw-r--r--. 1 root root  712 Aug 14 14:42 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root  798 Aug 14 14:42 CentOS-centosplus.repo</span><br><span class="line">-rw-r--r--. 1 root root 1320 Aug 14 14:42 CentOS-CR.repo</span><br><span class="line">-rw-r--r--. 1 root root  668 Aug 14 14:42 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--. 1 root root  756 Aug 14 14:42 CentOS-Extras.repo</span><br><span class="line">-rw-r--r--. 1 root root  338 Aug 14 14:42 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--. 1 root root  928 Aug 14 14:42 CentOS-Media.repo</span><br><span class="line">-rw-r--r--. 1 root root  736 Aug 14 14:42 CentOS-PowerTools.repo</span><br><span class="line">-rw-r--r--. 1 root root 1382 Aug 14 14:42 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--. 1 root root   74 Aug 14 14:42 CentOS-Vault.repo</span><br><span class="line">-rw-r--r--. 1 root root 1351 Aug  7 02:17 epel-playground.repo</span><br><span class="line">-rw-r--r--. 1 root root 1206 Aug  7 02:17 epel.repo</span><br><span class="line">-rw-r--r--. 1 root root 1305 Aug  7 02:17 epel-testing.repo</span><br><span class="line"></span><br><span class="line">dnf repolist</span><br><span class="line"><span class="meta">#</span>只需要修改以下4个启用的repo</span><br><span class="line">Last metadata expiration check: 0:00:45 ago on Sat 09 Nov 2019 01:26:02 PM CST.</span><br><span class="line">repo id                 repo name                                                status</span><br><span class="line">AppStream               CentOS-8 - AppStream                                     5,089</span><br><span class="line">BaseOS                  CentOS-8 - Base                                          2,843</span><br><span class="line">epel                    Extra Packages for Enterprise Linux 8 - x86_64           2,911</span><br><span class="line">extras                  CentOS-8 - Extras                                        3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>备份</span><br><span class="line">cp CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">cp CentOS-AppStream.repo CentOS-AppStream.repo.bak</span><br><span class="line">cp CentOS-Extras.repo CentOS-Extras.repo.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>替换</span><br><span class="line">sed -i 's/mirrorlist=/#mirrorlist=/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i 's/#baseurl=/baseurl=/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i 's/http:\/\/mirror.centos.org/https:\/\/mirrors.aliyun.com/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>修改epel(url不一样)</span><br><span class="line">cp epel.repo epel.repo.bak</span><br><span class="line"></span><br><span class="line">sed -i 's/metalink=/#metalink=/g' epel.repo</span><br><span class="line">sed -i 's/#baseurl=/baseurl=/g' epel.repo</span><br><span class="line">sed -i 's/https:\/\/download.fedoraproject.org\/pub/https:\/\/mirrors.aliyun.com/g' epel.repo</span><br></pre></td></tr></table></figure></p><p>以下是 CentOS 7 的修改方法，备忘：</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 推荐使用163镜像（Base使用163，epel使用ustc）</span><br><span class="line"><span class="meta">#</span> http://mirrors.163.com/.help/centos.html</span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br><span class="line">cp /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">cp /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line">sudo sed -e 's!^mirrorlist=!#mirrorlist=!g' \</span><br><span class="line">         -e 's!^#baseurl=!baseurl=!g' \</span><br><span class="line">         -e 's!//download\.fedoraproject\.org/pub!//mirrors.ustc.edu.cn!g' \</span><br><span class="line">         -e 's!http://mirrors\.ustc!https://mirrors.ustc!g' \</span><br><span class="line">         -i /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel-testing.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 也可以使用阿里云镜像</span><br><span class="line"><span class="meta">#</span> http://mirrors.aliyun.com/repo/</span><br><span class="line">第一步：备份</span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line"></span><br><span class="line">第二步：下载</span><br><span class="line">CentOS 7</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel-testing.repo http://mirrors.aliyun.com/repo/epel-testing.repo</span><br><span class="line"></span><br><span class="line">第三步：运行yum makecache生成缓存</span><br><span class="line">yum clean all</span><br><span class="line">rm -rf /var/cache/yum</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure></p><p>禁用 fastestmirror 插件</p><p>模板未配置，下个版本加入</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> sed -i '/^enabled=.*/c enabled=0' /etc/yum/pluginconf.d/fastestmirror.conf</span><br><span class="line">sed -i '/^enabled=1/c enabled=0' /etc/yum/pluginconf.d/fastestmirror.conf</span><br><span class="line"><span class="meta">#</span> 写入文件需要添加 -i 参数</span><br><span class="line"><span class="meta">#</span> ^ 表示一行的开头</span><br><span class="line"><span class="meta">#</span> . 匹配一个非换行符的任意字符</span><br><span class="line"><span class="meta">#</span> * 匹配0个或多个字符</span><br></pre></td></tr></table></figure></p><h3 id="14-系统更新">14. 系统更新</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dnf mackecache  #缓存软件包信息</span><br><span class="line">dnf update  #更新软件包</span><br><span class="line">dnf clean all</span><br><span class="line">rm -rf /var/cache/dnf</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &gt; ~/.bash_history\r</span><br><span class="line">history -c  #清空之前输入的命令记录</span><br><span class="line">rm -rf /tmp/*  #情况临时文件夹</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#比较完整的清空历史记录</span><br><span class="line">rm -f /var/log/audit/audit*\r</span><br><span class="line">echo &gt; /var/log/audit/audit.log\r</span><br><span class="line">rm -f /var/log/secure*\r</span><br><span class="line">echo &gt; /var/log/secure\r</span><br><span class="line">rm -f /var/log/btmp*\r</span><br><span class="line">echo &gt; /var/log/btmp\r</span><br><span class="line">rm -f /var/log/wtmp*\r</span><br><span class="line">echo &gt; /var/log/wtmp\r</span><br><span class="line">echo &gt; /var/log/lastlog\r</span><br><span class="line">echo &gt; ~/.bash_history\r</span><br><span class="line">history -c\r</span><br></pre></td></tr></table></figure></p><h3 id="15-安装图形界面">15. 安装图形界面</h3><p>基于特定场景需要，一般不用安装</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist  #查看可安装的组件</span><br><span class="line"></span><br><span class="line">yum groupinstall "Server with GUI"  #安装GNOME图形界面(与CentOS 7名称不一样)</span><br><span class="line">yum groupinstall "Graphical Administration Tools"  #将自动安装</span><br><span class="line"></span><br><span class="line">startx  #启动图形界面</span><br></pre></td></tr></table></figure></p><p>实例：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum grouplist</span><br><span class="line">Last metadata expiration check: 1:12:58 ago on Sat 09 Nov 2019 03:59:09 PM CST.</span><br><span class="line">Available Environment Groups:</span><br><span class="line">   Server with GUI</span><br><span class="line">   Server</span><br><span class="line">   Workstation</span><br><span class="line">   KDE Plasma Workspaces</span><br><span class="line">   Virtualization Host</span><br><span class="line">   Custom Operating System</span><br><span class="line">Installed Environment Groups:</span><br><span class="line">   Minimal Install</span><br><span class="line">Installed Groups:</span><br><span class="line">   Development Tools</span><br><span class="line">Available Groups:</span><br><span class="line">   Container Management</span><br><span class="line">   .NET Core Development</span><br><span class="line">   RPM Development Tools</span><br><span class="line">   Smart Card Support</span><br><span class="line">   Graphical Administration Tools</span><br><span class="line">   Headless Management</span><br><span class="line">   Legacy UNIX Compatibility</span><br><span class="line">   Network Servers</span><br><span class="line">   Scientific Support</span><br><span class="line">   Security Tools</span><br><span class="line">   System Tools</span><br><span class="line">   Fedora Packager</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum groupinstall &quot;Server with GUI&quot;</span><br><span class="line">Installing Environment Groups:</span><br><span class="line"> Server with GUI</span><br><span class="line">Installing Groups:</span><br><span class="line"> Container Management</span><br><span class="line"> Core</span><br><span class="line"> Fonts</span><br><span class="line"> GNOME</span><br><span class="line"> Guest Desktop Agents</span><br><span class="line"> Hardware Monitoring Utilities</span><br><span class="line"> Hardware Support</span><br><span class="line"> Headless Management</span><br><span class="line"> Internet Browser</span><br><span class="line"> Multimedia</span><br><span class="line"> Common NetworkManager submodules</span><br><span class="line"> Printing Client</span><br><span class="line"> Server product core</span><br><span class="line"> Standard</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">==============================================================================================================</span><br><span class="line">Install  744 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 696 M</span><br><span class="line">Installed size: 2.1 G</span><br><span class="line">Is this ok [y/N]:</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;初始版本：CentOS 8.0.1905&lt;/p&gt;
&lt;p&gt;继 RHEL 8 发布之后，CentOS 社区也发布了让人期待已久的 CentOS 8，并发布了两种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CentOS stream：滚动发布的 Linux 发行版，适用于需要频繁更新的开发
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://sysin.org/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://sysin.org/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] Theme Test</title>
    <link href="http://sysin.org/article/Hello-Hexo/"/>
    <id>http://sysin.org/article/Hello-Hexo/</id>
    <published>2010-08-01T02:10:00.000Z</published>
    <updated>2020-08-03T05:33:02.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="welcom">Welcom!</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;welcom&quot;&gt;Welcom!&lt;/h2&gt;

      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://sysin.org/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://sysin.org/tags/Blog/"/>
    
  </entry>
  
</feed>
